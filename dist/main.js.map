{"version":3,"file":"main.js","mappings":"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","sources":["webpack://js_project/./src/moving_object.js","webpack://js_project/./src/debris.js","webpack://js_project/./src/astronaut.js","webpack://js_project/./src/sound.js","webpack://js_project/./src/component.js","webpack://js_project/./src/flame.js","webpack://js_project/./src/jetpack.js","webpack://js_project/./src/level.js","webpack://js_project/./src/game.js","webpack://js_project/./src/game_view.js","webpack://js_project/./src/index.js"],"sourcesContent":["import Sound from \"./sound\";\n\n\nexport default class MovingObject {\n    constructor(argumentHash) {\n        this.pos = argumentHash.pos;\n        this.vel = argumentHash.vel;\n        this.radius = argumentHash.radius;\n        this.color = argumentHash.color;\n        this.game = argumentHash.game;\n\n        this.maxVelocity = 2;\n    }\n\n    drawObject = function(ctx) {\n        let img = new Image();\n        img.src = this.image\n        ctx.drawImage(img, this.pos[0] - this.radius - this.game.cameraX, this.pos[1] - this.radius - this.game.cameraY, this.radius * 2, this.radius * 2)\n    }\n\n    spinDraw = function(ctx) {\n        let img = new Image();\n        img.src = this.image;\n\n        this.drawX = this.pos[0] - this.game.cameraX;\n        this.drawY = this.pos[1] - this.game.cameraY;\n\n        if ((this.drawX + this.radius * 2) > this.game.MAP_WIDTH) {\n            this.drawX = this.drawX - this.game.MAP_WIDTH;\n        } else if ((this.drawX + this.radius * 2) < 0) {\n            this.drawX = this.drawX + this.game.MAP_WIDTH;\n        } \n        if ((this.drawY + this.radius * 2) > this.game.MAP_HEIGHT) {\n            this.drawY = this.drawY - this.game.MAP_HEIGHT;\n        } else if ((this.drawY + this.radius * 2) < 0) {\n            this.drawY = this.drawY + this.game.MAP_HEIGHT;\n        }  \n\n        ctx.save();\n        ctx.translate((this.drawX), (this.drawY));\n        ctx.rotate(this.rotation);\n        ctx.translate(-(this.drawX), -(this.drawY));\n        ctx.drawImage(img, this.drawX - this.radius, this.drawY - this.radius, this.radius * 2, this.radius * 2)\n        ctx.restore();\n    }\n\n\n    drawPoint = function(ctx) {\n        ctx.fillStyle = this.color;\n        ctx.beginPath();\n        ctx.arc(\n                    this.pos[0] - this.game.cameraX,\n                    this.pos[1] - this.game.cameraY,\n                    1,\n                    0,\n                    2 * Math.PI,\n                    false\n            )\n        ctx.fill()\n    }\n\n    drawShrunk(ctx) {\n        ctx.fillStyle = this.color;\n        ctx.beginPath();\n        ctx.arc(\n                    this.pos[0] / this.game.MAP_WIDTH * 200,\n                    this.pos[1] / this.game.MAP_WIDTH * 200,\n                    3,\n                    0,\n                    2 * Math.PI,\n                    false\n                )\n        ctx.fill()\n    }\n\n    throttleVelocity() {\n        for (let i = 0; i < 2; i++) {\n            if (this.vel[i] > this.maxVelocity) {\n                this.vel[i] = this.maxVelocity;\n            } else if (this.vel[i] < -this.maxVelocity) {\n                this.vel[i] = -this.maxVelocity\n            }\n        }\n    }\n    \n    move = function(){\n        this.throttleVelocity();\n        this.pos[0] += this.vel[0]\n        this.pos[1] += this.vel[1]\n        this.pos = this.game.wrap(this.pos);        \n    }\n    \n    isCollidedWith = function(otherObject) {\n        let sumRadii = this.radius + otherObject.radius;   \n        let distance = Math.sqrt(((otherObject.pos[0] - this.pos[0]) ** 2) + ((otherObject.pos[1] - this.pos[1]) ** 2))\n\n        return (sumRadii * .9) >= distance;\n    }\n\n    canBeGrabbed = function(otherObject) {\n        let sumRadii = this.radius + otherObject.radius;   \n        let distance = Math.sqrt(((this.pos[0] - otherObject.pos[0]) ** 2) + ((this.pos[1] - otherObject.pos[1]) ** 2))\n\n        return sumRadii + 10 >= distance;\n    }\n\n    randomVec(length) {\n        const deg = 2 * Math.PI * Math.random();\n        return this.scale([Math.sin(deg), Math.cos(deg)], length);\n    }\n\n    randomRotation() {\n        return (Math.random() * 2) * Math.PI / 180\n    }\n\n    scale(vec, m) {\n        return [vec[0] * m, vec[1] * m];\n    }\n\n    stepRotation() {\n        this.rotation += this.rotationSpeed;\n    }\n\n    bounce() {\n        this.vel[0] = -this.vel[0];\n        this.vel[1] = -this.vel[1];\n        this.pos[0] += this.vel[0] * 5;\n        this.pos[1] += this.vel[1] * 5;\n    }\n\n    resetVelocity(newVel) {\n        this.vel[0] = newVel[0];\n        this.vel[1] = newVel[1];\n    }\n\n    combinePositions(vector) {\n        this.pos[0] += vector[0];\n        this.pos[1] += vector[1];\n    }\n\n    opposingAngle(otherObject) {\n        return Math.atan2((otherObject.pos[1] - this.pos[1]), (otherObject.pos[0] - this.pos[0])) + 2.2;\n    }\n\n    makeVector(length, degrees) {\n        return this.scale([Math.sin(degrees), Math.cos(degrees)], length);\n    }\n\n    toDegrees(rads) {\n        return rads * 180 / Math.PI;\n    }\n\n    toRads(degrees) {\n        return degrees * Math.PI / 180\n    }\n\n    makeAngleFromVector(vector) {\n        return Math.atan2(-vector[1], vector[0])\n    }\n}\n\n\n\n\n","import MovingObject from './moving_object.js';\n\n\nexport default class Debris extends MovingObject {\n    constructor(pos, game) {\n        super({\n            color: 'red', \n            radius: 70, \n            vel: [0,0],\n            pos: pos, \n            game: game\n        });\n        this.vel = this.randomVec(1);\n        this.rotationSpeed = .01;\n        this.rotation = 0;\n        this.image = 'assets/imagery/debris.png';\n        this.notOnMap = true;\n    }\n\n}\n","import MovingObject from './moving_object.js';\nimport Sound from './sound.js';\n\nexport default class Astronaut extends MovingObject {\n\n    constructor(game) {\n        super({\n            color: 'blue', \n            radius: 30, \n            vel: [0, 0],\n            pos: [600, 0],\n            game: game\n\n        });\n        this.rotation = 0;\n        this.maxRotationSpeed = 1;\n        this.inventory = [];\n        this.oxygen = 100.00;\n        this.dead = false;\n        this.image = 'assets/imagery/astronaut.png';\n        this.pushoffSpeed = 1;\n        this.oxygenRate = 1;\n        this.loseOxygen();\n        this.jetpack = this.game.difficulty === 'easy' ? true : false;\n    }\n\n    loseOxygen() {\n        setInterval( () => {\n            if (!this.game.paused) this.oxygen -= this.oxygenRate;\n        }, 2000)\n    }\n\n    stick(otherObject) {\n        if (otherObject) {\n            this.surface = otherObject;\n            this.rotation = this.opposingAngle(this.surface);\n            this.rotationSpeed = this.surface.rotationSpeed;     \n            this.vel = [...this.surface.vel];\n        }\n    }\n\n    pushOff(otherObject) {\n        let vector = this.makeVector(3, -this.rotation); \n        this.rotation = -this.rotation;\n        this.surface = null;\n        this.rotationSpeed = 0;\n        this.resetVelocity(vector);       \n    }\n\n\n    putOnCircumference(otherObject) {\n        let grabVector = this.makeVector(otherObject.radius, -this.rotation);\n        let grabPosition = [(otherObject.pos[0] + grabVector[0]), (otherObject.pos[1] + grabVector[1])];\n        this.pos = grabPosition\n    }\n\n    astronautCollision = function(otherObject) {\n        let sumRadii = this.radius + otherObject.radius;   \n        let distance = Math.sqrt(((otherObject.pos[0] - this.pos[0]) ** 2) + ((otherObject.pos[1] - this.pos[1]) ** 2))\n\n        return (sumRadii * .5) >= distance;\n    }\n\n    astronautComponentCollision = function(otherObject) {\n        let sumRadii = this.radius + otherObject.radius;   \n        let distance = Math.sqrt(((otherObject.pos[0] - this.pos[0]) ** 2) + ((otherObject.pos[1] - this.pos[1]) ** 2))\n\n        return sumRadii >= distance;\n    }\n\n    increasePower() {\n        setInterval(() => {\n            if (this.pushoffSpeed < 5) this.pushoffSpeed += 1;\n        }, 300) \n        \n    }\n\n    resetPower() {\n        this.pushoffSpeed = 1;\n    }\n\n\n\n    throttleRotation() {\n        if (this.rotationSpeed > this.maxRotationSpeed) {\n            this.rotationSpeed = this.maxRotationSpeed;\n        }\n\n        if (this.rotationSpeed < -this.maxRotationSpeed) {\n            this.rotationSpeed = -this.maxRotationSpeed;\n        }\n    }\n}\n\n","export default class Sound {\n    constructor(src) {\n        this.sound = document.createElement(\"audio\");\n        this.sound.src = src;\n        this.sound.setAttribute(\"preload\", \"auto\");\n        this.sound.setAttribute(\"controls\", \"none\");\n        this.sound.setAttribute(\"muted\", \"muted\")\n        this.sound.style.display = \"none\";\n        document.body.appendChild(this.sound);\n        this.play = function(){\n            if (document.getElementById('unmuted')) this.sound.play();\n        }\n        this.stop = function(){\n            this.sound.pause();\n            this.sound.currentTime = 0;\n        }\n        this.restart = function(){\n            this.sound.currentTime = 0;\n            this.play();\n        }\n        this.loop = function(){\n            this.sound.addEventListener('ended', (e) => {\n                this.restart();\n            });\n        }\n        this.muteToggle = () => {\n            (this.sound.muted) ? this.sound.muted = false : this.sound.muted = true;\n        }\n\n    }\n}","import MovingObject from \"./moving_object.js\";\n\n\nexport default class Component extends MovingObject{\n    constructor(pos, game) {\n        super({\n            color: 'purple', \n            radius: 40, \n            vel: [0,0],\n            pos: pos, \n            game: game\n        });\n        this.image = 'assets/imagery/gear.png';\n        this.caught = false;\n        this.rotation = 1;\n        this.rotationSpeed = .01;\n    }\n}","import MovingObject from \"./moving_object.js\";\n\n\nexport default class Flame extends MovingObject {\n    constructor(pos, game) {\n        super({\n            color: 'orange', \n            radius: 60, \n            vel: [0,0],\n            pos: pos, \n            game: game\n        });\n        this.image = 'assets/imagery/flame_ball.gif';\n        this.rotation = 0;\n        this.rotationSpeed = this.toRads(Math.random() * Math.PI / 2);\n        this.notOnMap = true;\n    }\n}","import MovingObject from \"./moving_object\";\n\n\nexport default class Jetpack extends MovingObject{\n    constructor(pos, game) {\n        super({\n            color: 'red', \n            radius: 40, \n            vel: [0,0],\n            pos: pos, \n            game: game\n        });\n        this.image = 'assets/imagery/jetpack.png';\n        this.caught = false;\n        this.rotation = 0;\n        this.rotationSpeed = .01;\n    }\n}","export default class Level {\n    constructor(game) {\n        this.game = game;\n        this.makeGrid();\n    }\n\n\n    makeGrid(difficulty) {\n        if (this.game.difficulty === 'easy') {\n            this.grid = [\n                [1, 0, 0, 0, 1, 0, 0, 1, 0, 0],\n                [0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\n                [0, 0, 1, 0, 1, 0, 0, 1, 0, 0],\n                [1, 0, 0, 0, 0, 0, 1, 0, 0, 0],\n                [0, 1, 0, 0, 0, 0, 0, 0, 0, 1],\n                [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],\n                [0, 0, 0, 1, 0, 1, 0, 0, 0, 0],\n                [1, 0, 1, 0, 0, 0, 0, 1, 0, 1],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 1, 0, 0, 1],\n            ]\n        } else if (this.game.difficulty === 'medium') {\n            this.grid = [\n                [1, 0, 2, 0, 0, 2, 0, 0, 0, 1],\n                [0, 0, 0, 2, 0, 0, 0, 0, 0, 0],\n                [1, 0, 0, 2, 0, 2, 0, 0, 1, 0],\n                [0, 2, 0, 0, 0, 0, 1, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 1, 2, 0, 2],\n                [2, 0, 1, 0, 2, 0, 1, 0, 0, 0],\n                [0, 1, 0, 2, 0, 2, 1, 0, 0, 2],\n                [0, 0, 0, 2, 0, 0, 0, 0, 0, 0],\n                [0, 2, 0, 2, 0, 0, 0, 0, 1, 0],\n                [1, 0, 0, 2, 2, 0, 1, 0, 0, 1],\n            ]\n        } else if (this.game.difficulty === 'hard') {\n            this.grid = [\n                [1, 0, 2, 0, 0, 2, 0, 2, 0, 1],\n                [0, 1, 0, 2, 0, 0, 0, 0, 0, 0],\n                [1, 0, 0, 2, 0, 2, 0, 2, 0, 2],\n                [0, 2, 0, 0, 1, 0, 1, 0, 0, 0],\n                [0, 0, 0, 2, 0, 2, 1, 2, 0, 2],\n                [2, 0, 2, 2, 2, 0, 1, 0, 1, 0],\n                [0, 1, 0, 0, 0, 2, 1, 0, 0, 2],\n                [0, 0, 0, 2, 0, 0, 2, 0, 0, 0],\n                [0, 2, 0, 2, 2, 0, 0, 0, 1, 2],\n                [1, 0, 1, 2, 2, 0, 1, 0, 0, 1],\n            ]\n        }\n    }\n\n    populateMap() {\n        const SEPERATOR = this.game.MAP_WIDTH / 10\n        for (let i = 0; i < this.grid.length; i++) {\n            for (let j = 0; j < this.grid.length; j++) {\n                let pos = [SEPERATOR / 2 + j * SEPERATOR, SEPERATOR / 2 + i * SEPERATOR]\n\n                switch (this.grid[i][j]) {\n                    case 1:\n                        this.game.addDebris((pos))\n                        break;\n                \n                    case 2:\n                        this.game.addFlame((pos))\n                        break;\n                }\n            }\n            \n        }\n    }\n}","import Debris from \"./debris\";\nimport Astronaut from \"./astronaut\";\nimport Sound from \"./sound\";\nimport Component from \"./component\";\nimport Flame from \"./flame\";\nimport Jetpack from \"./jetpack\";\nimport Level from \"./level\";\n\nexport default class Game {\n\n    constructor(ctx, gameView, difficulty) {\n        this.difficulty = difficulty;\n        this.gameView = gameView;\n        this.canvas_width = ctx.canvas.width;\n        this.canvas_height = ctx.canvas.height;\n\n\n        this.myObserver = new ResizeObserver(entries => {\n            let entry = entries[0];\n            this.canvas_width = entry.contentRect.width\n            this.canvas_height = entry.contentRect.height\n        });\n\n        this.canvas = document.getElementById('game-canvas');\n        this.myObserver.observe(this.canvas)\n\n        this.ctx = ctx;\n        this.gameOver = false;\n        this.MAP_WIDTH = 2000;\n        this.MAP_HEIGHT = 2000;\n        this.setNumberComponents();\n        this.debris = []\n        this.flames = [];\n        this.level = new Level(this);\n        this.level.populateMap();\n        this.astronaut = new Astronaut(this);\n        this.setStartingDebris();\n        this.setDestinationDebris();\n        this.components = this.addComponents();\n        this.addJetpack();\n        this.objects = this.allObjects();\n        this.paused = false;\n        this.deathSound = new Sound('assets/sounds/death_rattle.wav');\n        this.collectSound = new Sound('assets/sounds/collect.wav');\n        this.repairSound = new Sound('assets/sounds/repair.wav');\n        this.launchSound = new Sound('assets/sounds/launch.wav');\n        this.steamImageLeft = 'assets/imagery/steam.png';\n        this.steamImageRight = 'assets/imagery/steam_right.png';\n        this.steamImageUp = 'assets/imagery/steam_up.png';\n        this.steamImageDown = 'assets/imagery/steam_down.png';\n    }\n\n    setCamera() {\n        if (!this.astronaut.surface) {\n        this.cameraX = -(this.canvas_width / 2 - this.astronaut.pos[0]);\n        this.cameraY = -(this.canvas_height / 2 - this.astronaut.pos[1]);\n        } else {\n            this.cameraX = -(this.canvas_width / 2 - this.astronaut.surface.pos[0]);\n            this.cameraY = -(this.canvas_height / 2 - this.astronaut.surface.pos[1]);\n        }\n    }\n\n    allObjects() {\n        let things = [];\n        things = things.concat(this.debris).concat(this.flames).concat(this.components).concat(this.astronaut);\n        return things;\n    }\n\n    addDebris = function(position){\n        let debris = new Debris(position, this);\n        this.debris.push(debris);\n    }\n\n    setNumberComponents() {\n        switch (this.difficulty) {\n            case 'easy':\n                this.NUM_COMPONENTS = 1;\n                break;\n            case 'medium':\n                this.NUM_COMPONENTS = 3;\n                break;\n            case 'hard':\n                this.NUM_COMPONENTS = 5;\n                break;\n        }\n    }\n\n    addComponents = function(){\n        let components = [];\n        for(let i = 0; i < this.NUM_COMPONENTS; i++){\n            components.push(new Component(this.randomPosition(), this));\n        }\n        return components;\n    }\n\n\n    addFlame = function(position){\n        let flame = new Flame(position, this);\n        this.flames.push(flame);\n    }\n\n    addJetpack() {\n        if (this.difficulty != 'easy') {\n            this.jetpack = new Jetpack(this.randomPosition(), this);\n            this.components.push(this.jetpack);\n        }\n    }\n\n    randomObjectSelector(array) {\n        return Math.floor(Math.random() * ((array.length)))\n    }\n\n    setStartingDebris() {\n        let i = this.randomObjectSelector(this.debris);\n        this.debris[i].vel = [0, 0];\n        this.debris[i].color = 'yellow';\n        this.debris[i].rotationSpeed = .013;\n        this.astronaut.stick(this.debris[i]);\n    }\n\n    setDestinationDebris() {\n        let i = this.randomObjectSelector(this.debris);\n        this.escapePod = this.debris[i];\n        this.escapePod.vel = [0, 0];\n        this.escapePod.color = 'yellowgreen'\n        this.escapePod.image = 'assets/imagery/escape_pod.gif';\n        this.escapePod.rotationSpeed = .01;\n        this.escapePod.notOnMap = false;\n    }\n    \n    randomPosition = function(){\n        let x;\n        let y;\n        x = Math.floor(Math.random() * this.MAP_WIDTH)\n        y = Math.floor(Math.random() * this.MAP_HEIGHT)\n        return [x,y];\n    }\n    \n    draw = function(){\n        this.ctx.clearRect(0,0,this.canvas_width, this.canvas_height);\n        for (let i = 0; i < this.objects.length; i++) {\n            if (this.objects[i].caught !== true) {\n                this.objects[i].spinDraw(this.ctx);\n            }\n        }\n        this.displayInstructions();\n        this.displayLegend();\n        this.displayOxygen();\n        this.drawMinimap()\n        this.steamMaker();\n    }\n\n    displayInstructions() {\n        this.ctx.font = \"30px space_age\";\n        this.ctx.fillStyle = 'yellow';\n        this.ctx.textAlign = 'left';\n        if (this.gameView.instructionsOn) {\n            this.ctx.fillText('Toggle instructions with \"I\" key', 30, this.canvas_height - 30)\n            this.ctx.fillText('Hold SPACE:         grab debris', 30, this.canvas_height - 60);\n            this.ctx.fillText('Release SPACE:   jump off ', 30, this.canvas_height - 80);\n            this.ctx.fillText('ARROW keys:         use jetpack', 30, this.canvas_height - 100);\n        } else {\n            this.ctx.fillText('Toggle instructions with \"I\" key', 30, this.canvas_height - 30);\n        }\n    } \n\n    displayLegend() {\n        this.ctx.font = \"20px space_age\";\n        this.ctx.fillStyle = 'red';\n        this.ctx.textAlign = 'right';\n        this.ctx.fillText('Jetpack', this.canvas_width - 20, 250);\n        this.ctx.fillStyle = 'blue';\n        this.ctx.fillText('Astronaut', this.canvas_width - 20, 265);\n        this.ctx.fillStyle = 'purple';\n        this.ctx.fillText('Component', this.canvas_width - 20, 280);\n        this.ctx.fillStyle = 'green';\n        this.ctx.fillText('Escape Pod', this.canvas_width - 20, 295);\n\n        this.ctx.fillStyle = 'white';\n        this.ctx.fillText('Acquired items:', this.canvas_width - 250, 30);\n        this.ctx.fillText(`Components: ${this.astronaut.inventory.length ? this.astronaut.inventory.length : '0'} / ${this.NUM_COMPONENTS}`, this.canvas_width - 250, 55);\n        if (this.astronaut.jetpack) {\n            this.ctx.fillText('Jetpack', this.canvas_width - 250, 70);\n        }\n\n        this.ctx.fillStyle = 'pink';\n        this.ctx.fillText('CURRENT TASK:', this.canvas_width - 250, 120);\n        if (this.NUM_COMPONENTS - this.astronaut.inventory.length === 0) {\n            this.ctx.fillStyle = 'green';\n            this.ctx.fillText('GO TO ESCAPE POD!', this.canvas_width - 250, 140);\n        } else {\n            this.ctx.fillText('Collect components', this.canvas_width - 250, 140);\n        }\n    }\n    \n    steamMaker() {\n        if (this.steamLeft) {\n            this.drawSteam('left');\n        }\n        if (this.steamRight) {\n            this.drawSteam('right');\n        }\n        if (this.steamUp) {\n            this.drawSteam('up');\n        }\n        if (this.steamDown) {\n            this.drawSteam('down');\n        }\n    }\n\n\n    drawSteam = function(direction) {\n        let img = new Image();\n        switch (direction) {\n            case 'left':\n                img.src = this.steamImageLeft\n                this.ctx.drawImage(img,this.astronaut.pos[0] - this.cameraX + this.astronaut.radius, this.astronaut.pos[1] - this.cameraY - this.astronaut.radius / 2, this.astronaut.radius, this.astronaut.radius)\n                break;\n            case 'right':\n                img.src = this.steamImageRight\n                this.ctx.drawImage(img,this.astronaut.pos[0] - this.cameraX - this.astronaut.radius * 2, this.astronaut.pos[1] - this.cameraY - this.astronaut.radius / 2, this.astronaut.radius, this.astronaut.radius)\n                break;\n            case 'up':\n                img.src = this.steamImageUp\n                this.ctx.drawImage(img,this.astronaut.pos[0] - this.cameraX - this.astronaut.radius / 2, this.astronaut.pos[1] - this.cameraY + this.astronaut.radius, this.astronaut.radius, this.astronaut.radius)\n                break;\n            case 'down':\n                img.src = this.steamImageDown\n                this.ctx.drawImage(img,this.astronaut.pos[0] - this.cameraX - this.astronaut.radius / 2, this.astronaut.pos[1] - this.cameraY - this.astronaut.radius * 2, this.astronaut.radius, this.astronaut.radius)\n                break;\n        }\n\n    }\n    \n    displayOxygen() {\n        this.ctx.textAlign = 'left';\n        this.ctx.font = \"40px space_age\";\n        this.ctx.fillStyle = `${(this.astronaut.oxygen < 10) ? 'red' : 'green'}`;\n        this.ctx.fillText(`Oxygen: ${(this.astronaut.oxygen <= 0) ? '0' : this.astronaut.oxygen.toFixed()}%`, 50, 50);\n    }\n\n    drawMinimap() {\n        const canvas = document.getElementById('minimap');\n        const minimap = canvas.getContext('2d');\n        minimap.clearRect(0, 0, 200, 200)\n        for (let i = 0; i < this.objects.length; i++) {\n            if (!this.objects[i].notOnMap) this.objects[i].drawShrunk(minimap);\n        }\n    }\n\n    moveObjects = function() {\n        if (this.astronaut.surface) {\n            this.astronaut.putOnCircumference(this.astronaut.surface);\n        } else if (!this.gameOver) {\n            this.astronaut.rotation = -this.astronaut.makeAngleFromVector(this.astronaut.vel) + 2.1;\n        }    \n        for (let i = 0; i < this.objects.length; i++) {\n            this.objects[i].move();\n            this.objects[i].stepRotation();\n        }\n    }\n    \n    wrap = function(pos) {\n        for(let i = 0; i < pos.length; i++) {\n            if (pos[i] < 0) pos[i] += this.MAP_WIDTH;\n            if (pos[i] > this.MAP_WIDTH) pos[i] -= this.MAP_WIDTH;\n        }\n        return pos;\n    }\n    \n    checkCollisions = function() {\n        for(let i = 0; i < this.debris.length; i++) {\n            for(let j = i + 1; j < this.debris.length; j++) {\n                if (this.debris[i].isCollidedWith(this.debris[j])) {\n                    this.debris[i].bounce();\n                    this.debris[j].bounce();                        \n                }\n            }\n        }\n    }\n\n    checkAstronautCollision = function() {\n        if (!this.astronaut.surface) {\n            for (let i = 0; i < this.debris.length; i++) {\n                if (this.astronaut.astronautCollision(this.debris[i])) {\n                    this.debris[i].bounce();\n                    this.astronaut.bounce();\n                }\n            }\n        }\n    }\n\n    checkFlameCollision = function() {\n        for (let i = 0; i < this.flames.length; i++) {\n            if (this.astronaut.astronautCollision(this.flames[i])) {\n                this.astronaut.oxygen = 0;\n            }\n        }\n    }\n\n    componentPickup = function() {\n        for (let i = 0; i < this.components.length; i++) {\n            if (this.astronaut.astronautComponentCollision(this.components[i])) {\n                this.components[i].caught = true;\n                this.components[i].pos = [NaN, NaN];\n                this.collectSound.play();\n                if (this.components[i] instanceof Jetpack) {\n                    this.astronaut.jetpack = true;\n                } else {\n                    this.astronaut.inventory.push(this.components[i]);\n                }\n            }\n        }\n    }\n\n    removeCaught = function() {\n        for(let i = 0; i < this.components.length; i++) {\n            if (this.components[i].caught) {\n                this.components.splice(i, 1);\n            }\n        }\n    }\n    \n    grabbableObject = function() {\n        let closestDebris = [];\n        for(let i = 0; i < this.debris.length; i++) {\n            if(this.debris[i].canBeGrabbed(this.astronaut)) {\n                closestDebris.push(this.debris[i]);\n            }\n        }\n        return closestDebris[0];\n    }\n\n\n    step = () => {\n        this.gameView.checkKeyState();\n        this.moveObjects();\n        this.removeCaught();\n        this.setCamera();\n        this.componentPickup();\n        if (this.gameOver === false) {\n            this.checkGameOver(); \n            this.checkCollisions();\n            this.checkAstronautCollision();\n            this.checkFlameCollision();\n            this.astronaut.throttleRotation();\n        }\n    }\n    \n    runGame = () => {\n        if (this.paused === false && this.gameOff === false) {\n            this.step();\n            this.draw();\n            if (this.gameOver) this.displayEndMessage();\n        }\n        window.requestAnimationFrame(this.runGame);\n    }\n\n    checkGameOver() {\n        if (this.astronaut.oxygen <= 0) {\n            this.gameLost();\n        } else if (this.astronaut.surface === this.escapePod && this.astronaut.inventory.length >= this.NUM_COMPONENTS) {\n            this.gameWon();\n        }\n    }\n\n    gameLost() {\n        this.gameOver = true;\n        this.deathSound.play();\n        this.astronaut.image = 'assets/imagery/dead_transparent.png';\n        this.astronaut.radius = 60;\n        this.astronaut.surface = null;\n        this.astronaut.vel = [1, 1];\n        this.astronaut.rotationSpeed = .03;\n    }\n\n    gameWon() {\n        this.winner = true;        \n        this.gameOver = true;\n        this.repairSound.play();\n        setTimeout(this.launchSequence, 6000);\n    }\n\n    launchSequence = () => {\n        this.launchSound.play();\n        this.escapePod.image = 'assets/imagery/escape_pod_launched.gif'\n        this.escapePod.vel = [-15, -15];\n        this.escapePod.rotation = Math.PI * 2 * .85;\n        this.escapePod.rotationSpeed = 0;\n        this.astronaut.rotationSpeed = 0;\n        this.astronaut.caught = true;\n        this.astronaut.oxygen = 100;\n        this.astronaut.oxygenRate = 0;\n    }\n\n    displayEndMessage() {\n        if (this.gameOver) {\n            this.ctx.font = \"40px space_age\";\n            this.ctx.fillStyle = `${(this.winner) ? 'green' : 'red'}`;\n            this.ctx.fillText(`${(this.winner) ? 'You win!' : 'Game Over'}`, (this.canvas_width / 2) + 100, this.canvas_height / 2 + 10);\n        }\n    }\n\n}\n\n","import Game from \"./game.js\"\nimport Sound from \"./sound.js\"\n\nexport default class GameView {\n    \n    constructor(ctx, difficulty) {\n        this.music = new Sound('assets/sounds/80s_theme.mp3');\n        this.lobbyMusic = new Sound('assets/sounds/september_song.mp3');\n        this.button = new Sound('assets/sounds/button.ogg');\n        this.ctx = ctx;\n        this.difficulty = difficulty;\n    }\n\n\n    loadsounds() {\n        this.instructions = new Sound('assets/sounds/instructions.wav');\n        this.chargingUp = new Sound('assets/sounds/charging_up.wav');\n        this.jumping = new Sound('assets/sounds/jumping.wav');\n        this.grunt = new Sound('assets/sounds/grunt.mp3');\n        this.startSound = new Sound('assets/sounds/door_open.wav');\n        this.jetpack = new Sound('assets/sounds/jetpack.wav');\n        this.selected = new Sound('assets/sounds/selected.wav');\n    }\n\n    startGame = () => {\n        let pause = document.getElementById('pause');\n        let quit = document.getElementById('restart');\n        \n        pause.style.display = \"inline-block\";\n        quit.style.display = \"inline-block\";\n        this.lobbyMusic.stop();\n        this.loadsounds();\n        this.startSound.play();        \n        setTimeout(() => this.startup(), 2000);\n    }\n\n    startup = () => { \n        document.getElementById('game-off').setAttribute('id', 'game-on');\n        this.game = new Game(this.ctx, this, this.difficulty);  \n        this.astronaut = this.game.astronaut;\n        this.game.gameOff = false;\n        this.game.paused = false;\n        this.instructionsOn = false;\n        this.music.play();\n        this.music.loop();\n        this.toggleScreen('start-menu', false);\n        this.toggleScreen('game-canvas', true);\n        this.toggleScreen('minimap', true);\n        this.keyState = { ' ': false, 'ArrowLeft': false, 'ArrowRight': false, 'ArrowUp': false, 'ArrowDown': false, }\n\n        window.addEventListener('keypress', (e) => {\n            if (e.key === 'i') {\n                this.instructionsOn = !this.instructionsOn;\n            }\n        });\n        \n        window.addEventListener('keydown', (e) => {\n            if (!this.game.gameOver) {\n                if (Object.keys(this.keyState).includes(e.key)) {\n                    e.preventDefault();\n                    this.keyState[e.key] = true;\n                }\n            }\n        });\n\n        window.addEventListener('keyup', (e) => {\n            if (Object.keys(this.keyState).includes(e.key)) {\n                this.keyState[e.key] = false;\n            }\n\n            if (!this.game.gameOver) {\n                if (e.key === ' ') {\n                    if (this.astronaut.surface) {\n                        this.astronaut.pushOff(this.astronaut.surface);\n                        this.chargingUp.stop();\n                        this.jumping.play();\n                    }\n                    this.astronaut.resetPower();\n                }\n            }   \n\n            if (e.code === 'ArrowLeft') {\n                    this.game.steamLeft = false;\n            }\n\n            if (e.code === 'ArrowRight') {\n                    this.game.steamRight = false;\n            }\n\n            if (e.code === 'ArrowUp') {\n                    this.game.steamUp = false;\n            }\n\n            if (e.code === 'ArrowDown') {\n                    this.game.steamDown = false;\n            }\n\n        });\n\n        \n        document.getElementById('pause').addEventListener('click', this.togglePause);\n\n        window.requestAnimationFrame(this.game.runGame);\n    }\n\n    lobbySound = function() {\n        if (this.game?.gameOff) this.lobbyMusic.play();\n    }\n    \n    toggleScreen(id, toggle) {\n        let element = document.getElementById(id);\n        let display = (toggle) ? 'flex' : 'none';\n        element.style.display = display;\n    }\n\n\n    togglePause = () => {\n        this.selected.play();\n        if (this.game.paused === true) {\n            this.game.paused = false;\n        } else {\n            this.game.paused = true;\n        }\n    }\n\n    checkKeyState = () => {\n        Object.keys(this.keyState).forEach((el) => {\n            if (this.keyState[el] && !this.game.gameOver) this.runKeyAction(el);\n        });\n    }\n\n    runKeyAction = (key) => {\n        switch (key) {\n            case ' ':\n                if (this.astronaut.surface) {\n                    this.astronaut.resetPower();\n                    this.astronaut.increasePower();\n                } else {\n                    if(this.game.grabbableObject !== []) {\n                        this.astronaut.stick(this.game.grabbableObject());\n                        this.grunt.play();\n                    }\n                }\n                break;            \n            case 'ArrowLeft':\n                if (!this.astronaut.surface && this.astronaut.jetpack) {\n                    this.astronaut.vel[0] -= .03\n                    this.jetpack.play();\n                    this.astronaut.oxygen -= .1;\n                    this.game.steamLeft = true;\n                }\n                break;\n            case 'ArrowRight':\n                if (!this.astronaut.surface && this.astronaut.jetpack) {\n                    this.astronaut.vel[0] += .03\n                    this.jetpack.play();\n                    this.astronaut.oxygen -= .1;\n                    this.game.steamRight = true;\n                }\n                break;\n            case 'ArrowUp':\n                if (!this.astronaut.surface && this.astronaut.jetpack) {\n                    this.astronaut.vel[1] -= .03\n                    this.jetpack.play();\n                    this.astronaut.oxygen -= .1;\n                    this.game.steamUp = true;\n                }\n                break;\n            case 'ArrowDown':\n                if (!this.astronaut.surface && this.astronaut.jetpack) {\n                    this.astronaut.vel[1] += .03\n                    this.jetpack.play();\n                    this.astronaut.oxygen -= .1;\n                    this.game.steamDown = true;\n                }\n                break;\n        }\n    }\n}\n\n","import GameView from './game_view.js';\nimport Sound from \"./sound.js\";\n\ndocument.addEventListener('DOMContentLoaded', function() {\n\n    const button = new Sound('assets/sounds/button.ogg');\n    const startSound = new Sound('assets/sounds/door_open.wav');\n    const selected = new Sound('assets/sounds/selected.wav');\n    const lobbyMusic = new Sound('assets/sounds/september_song.mp3');\n\n    const canvas = document.getElementById('game-canvas');\n    canvas.height = window.screen.height;\n    canvas.width = window.screen.width;\n    const ctx = canvas.getContext('2d');\n    let difficulty = 'easy';\n\n    const resizeCanvas = () => {\n        canvas.height = window.innerHeight * .9;\n        canvas.width = window.innerWidth * .9;\n    }\n\n    window.addEventListener('resize', resizeCanvas);\n\n    const tutorialImage = document.getElementById('tutorial-image');\n    const tutorialBox = document.getElementById('tutorial');\n    let currentCard = 0;\n    let tutorialBackgrounds = [\n        'assets/imagery/working.jpeg',\n        'assets/imagery/meteor.jpeg',\n        'assets/imagery/space_junk_2.jpg',\n        'assets/imagery/game_screenshot_escape_pod.png',\n        'assets/imagery/game_screenshot_component.png',\n        'assets/imagery/game_screenshot_escape_pod.png',\n        'assets/imagery/game_screenshot_oxygen.png',\n        'assets/imagery/game_screenshot_hold.png',\n        'assets/imagery/game_screenshot_fireball.png',\n        'assets/imagery/game_screenshot_jet.png',\n        'assets/imagery/game_screenshot_steam.png',\n        'assets/imagery/game_screenshot_radar.png',\n        'assets/imagery/floating.jpg'\n    ];\n    const tutorialText = document.getElementById('tutorial-text');\n    let tutorialSentences = [\n        'I was out on an EVA repairing the solar array when it happened...',\n\n        'The burning space junk headed straight for our station. It laid waste to the installation. Luckily I was able to grab on to the storage pod.',\n\n        'Theaftermath of the explosion is a field of wreckage.',\n\n        'Luckily my HUD is showing me that the escape pod is still intact, although damaged. If I can get to it after finding the right components to repair it, maybe I can fly back to Earth.',\n\n        'The components seem to be scattered throughout the debris field. I need to collect them.',\n\n        'Once I collect all the components, I will head straight to the escape pod and get the hell out of here.',\n\n        'Damn, my suit is ripped from the explosion. I need to hurry up before I run out of oxygen.',\n\n        'I can navigate by grabbing and holding onto the spinning debris pieces by holding <span>SPACEBAR</span>. If I <span>release SPACEBAR</span>, I can push off away from the debris towards my next target.',\n\n        'I need to avoid the fiery balls of wreckage as I move through the debris.',\n\n        'Ah, my EVA jetpack is out there, too! I should collect that right away to navigate...  *easy-mode: jetpack is available from the start',\n\n        '...because it will allow me to use the <span>ARROW KEYS</span> to adjust my flight trajectory. I should use it sparingly, though, becuase it consumes a lot of my oxygen.',\n\n        'On my radar, my position is shown in blue, the components in purple, the jetpack in red, and the escape pod in green.',\n\n        'Okay, mental review: Hold onto the debris with <span>SPACEBAR</span>, let go to fly off. Get the <span>jetpack</span> and fly around with the <span>ARROW KEYS</span>. Collect all <span>components</span>, then head to the escape pod. I can do this!'\n    ]\n    \n    \n    const toggleMute = () => {\n        const unmuted = document.getElementById('unmuted')\n        const muted = document.getElementById('muted')\n        const gameOff = document.getElementById('game-off')\n        if (muted) {\n            muted.setAttribute('id', 'unmuted');\n            selected.play();\n\n            setTimeout(() => {\n                document.querySelectorAll('audio').forEach(el => {\n                    if (el.getAttribute('src') === \"assets/sounds/80s_theme.mp3\" || el.getAttribute('src') === \"assets/sounds/selected.wav\") {\n                        el.play();\n                    } else if (gameOff && el.getAttribute('src') === \"assets/sounds/september_song.mp3\") {\n                        el.play();\n                    }\n                });\n            }, 100)\n\n        } else {\n            selected.play();\n            setTimeout(() => {\n            unmuted.setAttribute('id', 'muted')\n            document.querySelectorAll('audio').forEach(el => el.pause());\n            }, 300)\n        }        \n    }\n    \n    const toggleFullscreen = function() {\n        if (document.fullscreenElement) {\n            document.exitFullscreen();\n        } else {\n            document.body.requestFullscreen();\n        }\n    }\n    \n    document.getElementById('mute').addEventListener('click', toggleMute);\n    document.getElementById('fullscreen').addEventListener('click', toggleFullscreen);\n\n    const toggleScreenLobby = function(id, toggle) {\n        let element = document.getElementById(id);\n        let display = (toggle) ? 'flex' : 'none';\n        element.style.display = display;\n    }\n    \n    let gameView;\n\n    const startUpGame = function() {\n        lobbyMusic.stop();\n        gameView = new GameView(ctx, difficulty);\n        // document.body.requestFullscreen();\n        gameView.startGame();\n    }\n    \n    const restart = () => {\n        gameView.music.stop();\n        lobbyMusic.play();\n        gameView.game.gameOff = true;\n        document.getElementById('game-on').setAttribute('id', 'game-off');\n        let pause = document.getElementById('pause');\n        let quit = document.getElementById('restart');\n        pause.style.display = \"none\";\n        quit.style.display = \"none\";\n        gameView.startSound.play();\n        setTimeout(() => {\n            gameView.toggleScreen('start-menu', true);\n            gameView.toggleScreen('game-canvas', false);\n            gameView.toggleScreen('minimap', false);\n        }, 1000)\n    }\n    \n    let quit = document.getElementById('restart');\n    document.getElementById('restart').addEventListener('click', restart)\n    \n    const clickSound = function() {\n        button.play();\n    }\n\n    const changeDifficulty = function(e) {\n        e.target.control.checked = true;\n        difficulty = e.target.control.value;\n        selected.play();\n\n    }\n\n    const launchTutorial = function() {\n        toggleScreenLobby('start-menu', false);\n        toggleScreenLobby('tutorial', true);\n        tutorialText.innerHTML = `${tutorialSentences[0]}`;\n    }\n\n    const stepTutorialBack = function() {\n        clickSound();\n        currentCard--;\n        if (currentCard < 0 || currentCard >= tutorialSentences.length) {\n            currentCard = 0;\n            toggleScreenLobby('start-menu', true);\n            toggleScreenLobby('tutorial', false);\n        }\n        tutorialText.innerHTML = `${tutorialSentences[currentCard]}`;\n        tutorialImage.src = tutorialBackgrounds[currentCard]\n    }\n\n    const stepTutorial = function() {\n        clickSound();\n        currentCard++;\n        if (currentCard < 0 || currentCard >= tutorialSentences.length) {\n            currentCard = 0;\n            toggleScreenLobby('start-menu', true);\n            toggleScreenLobby('tutorial', false);\n        }\n        tutorialText.innerHTML = `${tutorialSentences[currentCard]}`;\n        tutorialImage.src = tutorialBackgrounds[currentCard]\n    }\n\n    const easySelect = document.getElementById('easy-button');\n    easySelect.addEventListener('click', changeDifficulty);\n\n    const mediumSelect = document.getElementById('medium-button');\n    mediumSelect.addEventListener('click', changeDifficulty);\n\n    const hardSelect = document.getElementById('hard-button');\n    hardSelect.addEventListener('click', changeDifficulty);\n\n    const startButton = document.getElementById('start-button');\n    startButton.addEventListener('mouseover', clickSound);\n    startButton.addEventListener('click', startUpGame);\n\n    const tutorialButton = document.getElementById('tutorial-button');\n    tutorialButton.addEventListener('mouseover', clickSound);\n    tutorialButton.addEventListener('click', launchTutorial);\n\n    const tutorialBack = document.getElementById('tutorial-back');\n    tutorialBack.addEventListener('click', stepTutorialBack);\n\n    const tutorialNext = document.getElementById('tutorial-next');\n    tutorialNext.addEventListener('click', stepTutorial);\n    \n    const startMenu = document.getElementById('start-menu');\n    startMenu.addEventListener('click', () => {\n    })\n\n    const enterButton = document.getElementById('enter-button');\n    enterButton.addEventListener('click', () => {\n        startSound.play();\n        lobbyMusic.play();\n        toggleScreenLobby('splash', false);\n        toggleScreenLobby('start-menu', true);\n    })\n\n})"],"names":["MovingObject","constructor","argumentHash","ctx","img","Image","src","this","image","drawImage","pos","radius","game","cameraX","cameraY","drawX","drawY","MAP_WIDTH","MAP_HEIGHT","save","translate","rotate","rotation","restore","fillStyle","color","beginPath","arc","Math","PI","fill","throttleVelocity","vel","wrap","otherObject","sqrt","maxVelocity","drawShrunk","i","randomVec","length","deg","random","scale","sin","cos","randomRotation","vec","m","stepRotation","rotationSpeed","bounce","resetVelocity","newVel","combinePositions","vector","opposingAngle","atan2","makeVector","degrees","toDegrees","rads","toRads","makeAngleFromVector","Debris","super","notOnMap","Astronaut","maxRotationSpeed","inventory","oxygen","dead","pushoffSpeed","oxygenRate","loseOxygen","jetpack","difficulty","setInterval","paused","stick","surface","pushOff","putOnCircumference","grabVector","grabPosition","increasePower","resetPower","throttleRotation","Sound","sound","document","createElement","setAttribute","style","display","body","appendChild","play","getElementById","stop","pause","currentTime","restart","loop","addEventListener","e","muteToggle","muted","Component","caught","Flame","Jetpack","Level","makeGrid","grid","populateMap","SEPERATOR","j","addDebris","addFlame","Game","gameView","position","debris","push","components","NUM_COMPONENTS","randomPosition","flame","flames","x","y","floor","clearRect","canvas_width","canvas_height","objects","spinDraw","displayInstructions","displayLegend","displayOxygen","drawMinimap","steamMaker","direction","steamImageLeft","astronaut","steamImageRight","steamImageUp","steamImageDown","gameOver","move","isCollidedWith","astronautCollision","astronautComponentCollision","NaN","collectSound","splice","closestDebris","canBeGrabbed","checkKeyState","moveObjects","removeCaught","setCamera","componentPickup","checkGameOver","checkCollisions","checkAstronautCollision","checkFlameCollision","gameOff","step","draw","displayEndMessage","window","requestAnimationFrame","runGame","launchSound","escapePod","canvas","width","height","myObserver","ResizeObserver","entries","entry","contentRect","observe","setNumberComponents","level","setStartingDebris","setDestinationDebris","addComponents","addJetpack","allObjects","deathSound","repairSound","things","concat","randomObjectSelector","array","font","textAlign","instructionsOn","fillText","steamLeft","drawSteam","steamRight","steamUp","steamDown","toFixed","minimap","getContext","gameLost","gameWon","winner","setTimeout","launchSequence","GameView","quit","lobbyMusic","loadsounds","startSound","startup","music","toggleScreen","keyState","key","Object","keys","includes","preventDefault","chargingUp","jumping","code","togglePause","selected","forEach","el","runKeyAction","grabbableObject","grunt","button","instructions","id","toggle","screen","innerHeight","innerWidth","tutorialImage","currentCard","tutorialBackgrounds","tutorialText","tutorialSentences","unmuted","querySelectorAll","getAttribute","fullscreenElement","exitFullscreen","requestFullscreen","toggleScreenLobby","clickSound","changeDifficulty","target","control","checked","value","startButton","startGame","tutorialButton","innerHTML"],"sourceRoot":""}