{"version":3,"file":"main.js","mappings":"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","sources":["webpack://js_project/./src/sound.js","webpack://js_project/./src/moving_object.js","webpack://js_project/./src/debris.js","webpack://js_project/./src/astronaut.js","webpack://js_project/./src/component.js","webpack://js_project/./src/flame.js","webpack://js_project/./src/jetpack.js","webpack://js_project/./src/level.js","webpack://js_project/./src/game.js","webpack://js_project/./src/game_view.js","webpack://js_project/./src/index.js"],"sourcesContent":["export default class Sound {\n    constructor(src) {\n        this.sound = document.createElement(\"audio\");\n        this.sound.src = src;\n        this.sound.setAttribute(\"preload\", \"auto\");\n        this.sound.setAttribute(\"controls\", \"none\");\n        this.sound.setAttribute(\"muted\", \"muted\")\n        this.sound.style.display = \"none\";\n        document.body.appendChild(this.sound);\n        this.play = function(){\n            this.sound.play();\n        }\n        this.stop = function(){\n            this.sound.pause();\n            this.sound.currentTime = 0;\n        }\n        this.restart = function(){\n            this.sound.currentTime = 0;\n            this.play();\n        }\n        this.loop = function(){\n            this.sound.addEventListener('ended', (e) => {\n                this.restart();\n            });\n        }\n        this.muteToggle = () => {\n            (this.sound.muted) ? this.sound.muted = false : this.sound.muted = true;\n        }\n\n    }\n}","import Sound from \"./sound\";\n\n\nexport default class MovingObject {\n    constructor(argumentHash) {\n        this.pos = argumentHash.pos;\n        this.vel = argumentHash.vel;\n        this.radius = argumentHash.radius;\n        this.color = argumentHash.color;\n        this.game = argumentHash.game;\n        this.collideSound = new Sound('assets/sounds/collision.wav');\n        this.maxVelocity = 6;\n    }\n\n    drawObject = function(ctx) {\n        let img = new Image();\n        img.src = this.image\n        ctx.drawImage(img, this.pos[0] - this.radius - this.game.cameraX, this.pos[1] - this.radius - this.game.cameraY, this.radius * 2, this.radius * 2)\n    }\n\n    spinDraw = function(ctx) {\n        let img = new Image();\n        img.src = this.image;\n\n        this.drawX = this.pos[0] - this.game.cameraX;\n        this.drawY = this.pos[1] - this.game.cameraY;\n\n        if ((this.drawX + this.radius * 2) > this.game.MAP_WIDTH) {\n            this.drawX = this.drawX - this.game.MAP_WIDTH;\n        } else if ((this.drawX + this.radius * 2) < 0) {\n            this.drawX = this.drawX + this.game.MAP_WIDTH;\n        } \n        if ((this.drawY + this.radius * 2) > this.game.MAP_HEIGHT) {\n            this.drawY = this.drawY - this.game.MAP_HEIGHT;\n        } else if ((this.drawY + this.radius * 2) < 0) {\n            this.drawY = this.drawY + this.game.MAP_HEIGHT;\n        }  \n\n        ctx.save();\n        // ctx.translate(this.pos[0], this.pos[1]);\n        ctx.translate((this.drawX), (this.drawY));\n        ctx.rotate(this.rotation);\n        ctx.translate(-(this.drawX), -(this.drawY));\n        ctx.drawImage(img, this.drawX - this.radius, this.drawY - this.radius, this.radius * 2, this.radius * 2)\n        ctx.restore();\n    }\n\n\n    drawPoint = function(ctx) {\n        ctx.fillStyle = this.color;\n        ctx.beginPath();\n        ctx.arc(\n                    this.pos[0] - this.game.cameraX,\n                    this.pos[1] - this.game.cameraY,\n                    1,\n                    0,\n                    2 * Math.PI,\n                    false\n            )\n        ctx.fill()\n    }\n\n    drawShrunk(ctx) {\n        ctx.fillStyle = this.color;\n        ctx.beginPath();\n        ctx.arc(\n                    this.pos[0] / this.game.MAP_WIDTH * 200,\n                    this.pos[1] / this.game.MAP_WIDTH * 200,\n                    3,\n                    0,\n                    2 * Math.PI,\n                    false\n                )\n        ctx.fill()\n    }\n\n    throttleVelocity() {\n        for (let i = 0; i < 2; i++) {\n            if (this.vel[i] > this.maxVelocity) {\n                this.vel[i] = this.maxVelocity;\n            } else if (this.vel[i] < -this.maxVelocity) {\n                this.vel[i] = -this.maxVelocity\n            }\n        }\n    }\n    \n    move = function(){\n        this.throttleVelocity();\n        this.pos[0] += this.vel[0]\n        this.pos[1] += this.vel[1]\n        this.pos = this.game.wrap(this.pos);        \n    }\n    \n    isCollidedWith = function(otherObject) {\n        let sumRadii = this.radius + otherObject.radius;   \n        let distance = Math.sqrt(((otherObject.pos[0] - this.pos[0]) ** 2) + ((otherObject.pos[1] - this.pos[1]) ** 2))\n\n        return (sumRadii * .9) >= distance;\n    }\n\n    canBeGrabbed = function(otherObject) {\n        let sumRadii = this.radius + otherObject.radius;   \n        let distance = Math.sqrt(((this.pos[0] - otherObject.pos[0]) ** 2) + ((this.pos[1] - otherObject.pos[1]) ** 2))\n\n        return sumRadii + 10 >= distance;\n    }\n\n    randomVec(length) {\n        const deg = 2 * Math.PI * Math.random();\n        return this.scale([Math.sin(deg), Math.cos(deg)], length);\n    }\n\n    randomRotation() {\n        return (Math.random() * 2) * Math.PI / 180\n    }\n\n    scale(vec, m) {\n        return [vec[0] * m, vec[1] * m];\n    }\n\n    stepRotation() {\n        // this.rotation = (this.rotation + this.initialRotation) % 6.283\n        this.rotation += this.rotationSpeed;\n    }\n\n    bounce() {\n        // this.collideSound.play();\n        this.vel[0] = -this.vel[0];\n        this.vel[1] = -this.vel[1];\n        // let bounceDirection = this.opposingAngle(otherObject);\n        // let bounceVector = this.makeVector(2, bounceDirection)\n        this.pos[0] += this.vel[0] * 5;\n        this.pos[1] += this.vel[1] * 5;\n        // this.combineVectors(bounceVector);\n    }\n\n    resetVelocity(newVel) {\n        this.vel[0] = newVel[0];\n        this.vel[1] = newVel[1];\n    }\n\n    combinePositions(vector) {\n        this.pos[0] += vector[0];\n        this.pos[1] += vector[1];\n    }\n\n    opposingAngle(otherObject) {\n        return Math.atan2((otherObject.pos[1] - this.pos[1]), (otherObject.pos[0] - this.pos[0])) + 2.2;\n    }\n\n    makeVector(length, degrees) {\n        return this.scale([Math.sin(degrees), Math.cos(degrees)], length);\n    }\n\n    toDegrees(rads) {\n        return rads * 180 / Math.PI;\n    }\n\n    toRads(degrees) {\n        return degrees * Math.PI / 180\n    }\n\n    makeAngleFromVector(vector) {\n        return Math.atan2(-vector[1], vector[0])\n    }\n}\n\n\n\n\n","import MovingObject from './moving_object.js';\n\n\nexport default class Debris extends MovingObject {\n    constructor(pos, game) {\n        super({\n            color: 'red', \n            radius: 70, \n            vel: [0,0],\n            pos: pos, \n            game: game\n        });\n        this.vel = this.randomVec(3);\n        // this.rotationSpeed = this.toRads(Math.random() * 2 * Math.PI);\n        this.rotationSpeed = .03;\n        this.rotation = 0;\n        this.image = 'assets/imagery/debris.png';\n        this.notOnMap = true;\n    }\n\n}\n","import MovingObject from './moving_object.js';\nimport Sound from './sound.js';\n\nexport default class Astronaut extends MovingObject {\n\n    constructor(game) {\n        super({\n            color: 'white', \n            radius: 30, \n            vel: [0, 0],\n            pos: [600, 0],\n            game: game\n\n        });\n        this.rotation = 0;\n        this.maxRotationSpeed = 1;\n        // this.stick(this.game.debris[0]);\n        this.inventory = [];\n        this.oxygen = 100.00;\n        this.dead = false;\n        this.image = 'assets/imagery/astronaut.png';\n        this.pushoffSpeed = 1;\n        this.oxygenRate = 1;\n        this.loseOxygen();\n        // this.chokingSound = new Sound('assets/sounds/choking.wav');\n        this.jetpack = true;\n    }\n\n    loseOxygen() {\n        setInterval( () => {\n            if (!this.game.paused) this.oxygen -= this.oxygenRate;\n        }, 2000)\n    }\n\n    stick(otherObject) {\n        if (otherObject) {\n            this.surface = otherObject;\n            this.rotation = this.opposingAngle(this.surface);\n            this.rotationSpeed = this.surface.rotationSpeed;     \n            this.vel = [...this.surface.vel];\n        }\n    }\n\n    pushOff(otherObject) {\n        let vector = this.makeVector(6, -this.rotation); \n        this.rotation = -this.rotation;\n        this.surface = null;\n        this.rotationSpeed = 0;\n        this.resetVelocity(vector);       \n    }\n\n\n    putOnCircumference(otherObject) {\n        let grabVector = this.makeVector(otherObject.radius, -this.rotation);\n        let grabPosition = [(otherObject.pos[0] + grabVector[0]), (otherObject.pos[1] + grabVector[1])];\n        this.pos = grabPosition\n    }\n\n    astronautCollision = function(otherObject) {\n        let sumRadii = this.radius + otherObject.radius;   \n        let distance = Math.sqrt(((otherObject.pos[0] - this.pos[0]) ** 2) + ((otherObject.pos[1] - this.pos[1]) ** 2))\n\n        return (sumRadii * .5) >= distance;\n    }\n\n    astronautComponentCollision = function(otherObject) {\n        let sumRadii = this.radius + otherObject.radius;   \n        let distance = Math.sqrt(((otherObject.pos[0] - this.pos[0]) ** 2) + ((otherObject.pos[1] - this.pos[1]) ** 2))\n\n        return sumRadii >= distance;\n    }\n\n    increasePower() {\n        setInterval(() => {\n            if (this.pushoffSpeed < 10) this.pushoffSpeed += 1;\n        }, 300) \n        \n    }\n\n    resetPower() {\n        this.pushoffSpeed = 1;\n\n    }\n\n    // choking() {\n    //     if (this.oxygen < 10) {\n    //         this.chokingSound.play();\n    //     }\n    // }\n\n    throttleRotation() {\n        if (this.rotationSpeed > this.maxRotationSpeed) {\n            this.rotationSpeed = this.maxRotationSpeed;\n        }\n\n        if (this.rotationSpeed < -this.maxRotationSpeed) {\n            this.rotationSpeed = -this.maxRotationSpeed;\n        }\n    }\n}\n\n","import MovingObject from \"./moving_object.js\";\n\n\nexport default class Component extends MovingObject{\n    constructor(pos, game) {\n        super({\n            color: 'purple', \n            radius: 40, \n            vel: [0,0],\n            pos: pos, \n            game: game\n        });\n        this.image = 'assets/imagery/gear.png';\n        this.caught = false;\n        this.rotation = 1;\n        this.rotationSpeed = .03;\n    }\n}","import MovingObject from \"./moving_object.js\";\n\n\nexport default class Flame extends MovingObject {\n    constructor(pos, game) {\n        super({\n            color: 'orange', \n            radius: 60, \n            vel: [0,0],\n            pos: pos, \n            game: game\n        });\n        this.image = 'assets/imagery/flame_ball.gif';\n        this.rotation = 0;\n        this.rotationSpeed = this.toRads(Math.random() * Math.PI);\n        this.notOnMap = true;\n    }\n}","import MovingObject from \"./moving_object\";\n\n\nexport default class Jetpack extends MovingObject{\n    constructor(pos, game) {\n        super({\n            color: 'red', \n            radius: 40, \n            vel: [0,0],\n            pos: pos, \n            game: game\n        });\n        this.image = 'assets/imagery/jetpack.png';\n        this.caught = false;\n        this.rotation = 0;\n        this.rotationSpeed = .03;\n    }\n}","export default class Level {\n    constructor(game) {\n        this.game = game;\n        this.makeGrid();\n    }\n\n\n    makeGrid(difficulty) {\n        if (this.game.difficulty === 'easy') {\n            this.grid = [\n                [1, 0, 0, 0, 1, 0, 0, 1, 0, 0],\n                [0, 0, 0, 1, 0, 0, 0, 2, 0, 1],\n                [0, 0, 1, 0, 1, 0, 0, 1, 0, 0],\n                [1, 0, 0, 0, 0, 0, 1, 0, 2, 0],\n                [0, 1, 0, 2, 0, 2, 0, 0, 0, 1],\n                [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],\n                [0, 0, 0, 1, 0, 1, 0, 0, 2, 0],\n                [1, 0, 1, 0, 0, 0, 0, 1, 0, 1],\n                [0, 2, 0, 0, 0, 2, 0, 0, 0, 0],\n                [0, 0, 0, 2, 0, 0, 1, 0, 0, 1],\n            ]\n        } else if (this.game.difficulty === 'medium') {\n            this.grid = [\n                [1, 0, 2, 0, 0, 2, 0, 2, 0, 1],\n                [0, 0, 0, 2, 0, 0, 0, 0, 0, 0],\n                [1, 0, 0, 2, 0, 2, 0, 0, 1, 0],\n                [0, 2, 0, 2, 0, 0, 1, 0, 0, 0],\n                [0, 0, 0, 2, 0, 0, 1, 2, 0, 2],\n                [2, 0, 1, 2, 2, 0, 1, 0, 0, 0],\n                [0, 1, 0, 2, 0, 2, 1, 0, 0, 2],\n                [0, 0, 0, 2, 0, 0, 2, 0, 0, 0],\n                [0, 2, 0, 2, 0, 0, 0, 0, 1, 0],\n                [1, 0, 0, 2, 2, 0, 1, 0, 0, 1],\n            ]\n        } else if (this.game.difficulty === 'hard') {\n            this.grid = [\n                [1, 0, 2, 0, 0, 2, 0, 2, 0, 1],\n                [0, 1, 0, 2, 0, 0, 0, 0, 2, 0],\n                [1, 0, 0, 2, 0, 2, 0, 2, 0, 2],\n                [0, 2, 0, 2, 1, 0, 1, 0, 0, 0],\n                [0, 0, 0, 2, 0, 2, 1, 2, 0, 2],\n                [2, 0, 2, 2, 2, 0, 1, 0, 1, 0],\n                [0, 1, 0, 2, 0, 2, 1, 0, 0, 2],\n                [0, 0, 0, 2, 0, 0, 2, 0, 0, 0],\n                [0, 2, 0, 2, 2, 0, 0, 0, 1, 2],\n                [1, 0, 1, 2, 2, 0, 1, 0, 0, 1],\n            ]\n        }\n    }\n\n    populateMap() {\n        const SEPERATOR = this.game.MAP_WIDTH / 10\n        for (let i = 0; i < this.grid.length; i++) {\n            for (let j = 0; j < this.grid.length; j++) {\n                let pos = [SEPERATOR / 2 + j * SEPERATOR, SEPERATOR / 2 + i * SEPERATOR]\n\n                switch (this.grid[i][j]) {\n                    case 1:\n                        this.game.addDebris((pos))\n                        break;\n                \n                    case 2:\n                        this.game.addFlame((pos))\n                        break;\n                }\n            }\n            \n        }\n    }\n}","import Debris from \"./debris\";\nimport Astronaut from \"./astronaut\";\nimport Sound from \"./sound\";\nimport Component from \"./component\";\nimport Flame from \"./flame\";\nimport Star from \"./star\";\nimport Jetpack from \"./jetpack\";\nimport GameView from \"./game_view\";\nimport Level from \"./level\";\n\nexport default class Game {\n\n    constructor(ctx, gameView, difficulty) {\n        this.difficulty = difficulty;\n        this.gameView = gameView;\n        this.CANVAS_WIDTH = ctx.canvas.width;\n        this.CANVAS_HEIGHT = ctx.canvas.height;\n        this.ctx = ctx;\n        this.gameOver = false;\n        this.MAP_WIDTH = 2000;\n        this.MAP_HEIGHT = 2000;\n        this.NUM_DEBRIS = 15;\n        this.setNumberComponents();\n        this.NUM_FLAMES = 5;\n        this.debris = []\n        // this.debris = this.addDebris();\n        this.flames = [];\n        // this.flames = this.addFlames();\n        this.level = new Level(this);\n        this.level.populateMap();\n        this.astronaut = new Astronaut(this);\n        this.setStartingDebris();\n        this.setDestinationDebris();\n        this.components = this.addComponents();\n        this.addJetpack();\n        this.objects = this.allObjects();\n        this.paused = false;\n        this.deathSound = new Sound('assets/sounds/death_rattle.wav');\n        this.collectSound = new Sound('assets/sounds/collect.wav');\n        this.repairSound = new Sound('assets/sounds/repair.wav');\n        this.launchSound = new Sound('assets/sounds/launch.wav');\n        this.steamImageLeft = 'assets/imagery/steam.png';\n        this.steamImageRight = 'assets/imagery/steam_right.png';\n        this.steamImageUp = 'assets/imagery/steam_up.png';\n        this.steamImageDown = 'assets/imagery/steam_down.png';\n    }\n\n    setCamera() {\n        if (!this.astronaut.surface) {\n        this.cameraX = -(this.CANVAS_WIDTH / 2 - this.astronaut.pos[0]);\n        this.cameraY = -(this.CANVAS_HEIGHT / 2 - this.astronaut.pos[1]);\n        } else {\n            this.cameraX = -(this.CANVAS_WIDTH / 2 - this.astronaut.surface.pos[0]);\n            this.cameraY = -(this.CANVAS_HEIGHT / 2 - this.astronaut.surface.pos[1]);\n        }\n    }\n\n    allObjects() {\n        let things = [];\n        things = things.concat(this.debris).concat(this.flames).concat(this.components).concat(this.astronaut);\n        return things;\n    }\n\n    // addDebris = function(){\n    //     let debris = [];\n    //     for(let i = 0; i < this.NUM_DEBRIS; i++){\n    //         debris.push(new Debris(this.randomPosition(), this));\n    //     }\n    //     return debris;\n    // }\n\n    addDebris = function(position){\n        let debris = new Debris(position, this);\n        this.debris.push(debris);\n    }\n\n    setNumberComponents() {\n        switch (this.difficulty) {\n            case 'easy':\n                this.NUM_COMPONENTS = 3;\n                break;\n            case 'medium':\n                this.NUM_COMPONENTS = 5;\n                break;\n            case 'hard':\n                this.NUM_COMPONENTS = 7;\n                break;\n        }\n    }\n\n    addComponents = function(){\n        let components = [];\n        for(let i = 0; i < this.NUM_COMPONENTS; i++){\n            components.push(new Component(this.randomPosition(), this));\n        }\n        return components;\n    }\n\n    // addFlames = function(){\n    //     let flames = [];\n    //     for(let i = 0; i < this.NUM_FLAMES; i++){\n    //         flames.push(new Flame(this.randomPosition(), this));\n    //     }\n    //     return flames;\n    // }\n\n    addFlame = function(position){\n        let flame = new Flame(position, this);\n        this.flames.push(flame);\n    }\n\n    addJetpack() {\n        this.jetpack = new Jetpack(this.randomPosition(), this);\n        this.components.push(this.jetpack);\n    }\n\n    randomObjectSelector(array) {\n        return Math.floor(Math.random() * ((array.length)))\n    }\n\n    setStartingDebris() {\n        let i = this.randomObjectSelector(this.debris);\n        this.debris[i].vel = [0, 0];\n        this.debris[i].color = 'yellow';\n        this.debris[i].rotationSpeed = .02;\n        this.astronaut.stick(this.debris[i]);\n    }\n\n    setDestinationDebris() {\n        let i = this.randomObjectSelector(this.debris);\n        this.escapePod = this.debris[i];\n        this.escapePod.vel = [0, 0];\n        this.escapePod.color = 'green'\n        this.escapePod.image = 'assets/imagery/escape_pod.gif';\n        this.escapePod.rotationSpeed = .01;\n        this.escapePod.notOnMap = false;\n    }\n    \n    randomPosition = function(){\n        let x;\n        let y;\n        x = Math.floor(Math.random() * this.MAP_WIDTH)\n        y = Math.floor(Math.random() * this.MAP_HEIGHT)\n        return [x,y];\n    }\n    \n    draw = function(){\n        this.ctx.clearRect(0,0,this.CANVAS_WIDTH, this.CANVAS_HEIGHT);\n        for (let i = 0; i < this.objects.length; i++) {\n            if (this.objects[i].caught !== true) {\n                this.objects[i].spinDraw(this.ctx);\n                // if  (this.objects[i] instanceof Astronaut || this.objects[i] instanceof Debris || this.objects[i] instanceof Flame) {\n                //     this.objects[i].spinDraw(this.ctx);\n                // } else {\n                //     this.objects[i].drawObject(this.ctx);\n                // }\n            }\n        }\n        this.displayOxygen();\n        this.drawMinimap()\n        this.steamMaker();\n    }\n    \n    steamMaker() {\n        if (this.steamLeft) {\n            this.drawSteam('left');\n        }\n        if (this.steamRight) {\n            this.drawSteam('right');\n        }\n        if (this.steamUp) {\n            this.drawSteam('up');\n        }\n        if (this.steamDown) {\n            this.drawSteam('down');\n        }\n    }\n\n\n    drawSteam = function(direction) {\n        let img = new Image();\n        switch (direction) {\n            case 'left':\n                img.src = this.steamImageLeft\n                this.ctx.drawImage(img,this.astronaut.pos[0] - this.cameraX + this.astronaut.radius, this.astronaut.pos[1] - this.cameraY - this.astronaut.radius / 2, this.astronaut.radius, this.astronaut.radius)\n                console.log('drewsteam')\n                break;\n            case 'right':\n                img.src = this.steamImageRight\n                this.ctx.drawImage(img,this.astronaut.pos[0] - this.cameraX - this.astronaut.radius * 2, this.astronaut.pos[1] - this.cameraY - this.astronaut.radius / 2, this.astronaut.radius, this.astronaut.radius)\n                console.log('steamright')\n                break;\n            case 'up':\n                img.src = this.steamImageUp\n                this.ctx.drawImage(img,this.astronaut.pos[0] - this.cameraX - this.astronaut.radius / 2, this.astronaut.pos[1] - this.cameraY + this.astronaut.radius, this.astronaut.radius, this.astronaut.radius)\n                break;\n            case 'down':\n                img.src = this.steamImageDown\n                this.ctx.drawImage(img,this.astronaut.pos[0] - this.cameraX - this.astronaut.radius / 2, this.astronaut.pos[1] - this.cameraY - this.astronaut.radius * 2, this.astronaut.radius, this.astronaut.radius)\n                break;\n        }\n\n    }\n    \n    displayOxygen() {\n\n        this.ctx.font = \"40px space_age\";\n        this.ctx.fillStyle = `${(this.astronaut.oxygen < 10) ? 'red' : 'green'}`;\n        this.ctx.fillText(`Oxygen: ${(this.astronaut.oxygen <= 0) ? '0' : this.astronaut.oxygen.toFixed()}%`, 50, 50);\n        // this.ctx.textAlign = \"left\";\n    }\n\n    drawMinimap() {\n        const canvas = document.getElementById('minimap');\n        const minimap = canvas.getContext('2d');\n        minimap.clearRect(0, 0, 200, 200)\n        for (let i = 0; i < this.objects.length; i++) {\n            if (!this.objects[i].notOnMap) this.objects[i].drawShrunk(minimap);\n        }\n    }\n\n    // makeStars() {\n    //     let stars = [];\n    //     for(let i = 0; i < 50; i++){\n    //         stars.push(new Star(this.randomPosition(), this));\n    //     }\n    //     return stars;\n    // }\n\n\n    moveObjects = function() {\n        if (this.astronaut.surface) {\n            this.astronaut.putOnCircumference(this.astronaut.surface);\n        } else if (!this.gameOver) {\n            this.astronaut.rotation = -this.astronaut.makeAngleFromVector(this.astronaut.vel) + 2.1;\n        }    \n        for (let i = 0; i < this.objects.length; i++) {\n            this.objects[i].move();\n            this.objects[i].stepRotation();\n        }\n    }\n    \n    wrap = function(pos) {\n        for(let i = 0; i < pos.length; i++) {\n            if (pos[i] < 0) pos[i] += this.MAP_WIDTH;\n            if (pos[i] > this.MAP_WIDTH) pos[i] -= this.MAP_WIDTH;\n        }\n        return pos;\n    }\n    \n    checkCollisions = function() {\n        for(let i = 0; i < this.debris.length; i++) {\n            for(let j = i + 1; j < this.debris.length; j++) {\n                if (this.debris[i].isCollidedWith(this.debris[j])) {\n                    this.debris[i].bounce();\n                    this.debris[j].bounce();                        \n                }\n            }\n        }\n    }\n\n    checkAstronautCollision = function() {\n        if (!this.astronaut.surface) {\n            for (let i = 0; i < this.debris.length; i++) {\n                if (this.astronaut.astronautCollision(this.debris[i])) {\n                    this.debris[i].bounce();\n                    this.astronaut.bounce();\n                }\n            }\n        }\n    }\n\n    checkFlameCollision = function() {\n        for (let i = 0; i < this.flames.length; i++) {\n            if (this.astronaut.astronautCollision(this.flames[i])) {\n                this.astronaut.oxygen = 0;\n            }\n        }\n    }\n\n    componentPickup = function() {\n        for (let i = 0; i < this.components.length; i++) {\n            if (this.astronaut.astronautComponentCollision(this.components[i])) {\n                this.components[i].caught = true;\n                this.components[i].pos = [NaN, NaN];\n                this.collectSound.play();\n                if (this.components[i] instanceof Jetpack) {\n                    this.astronaut.jetpack = true;\n                } else {\n                    this.astronaut.inventory.push(this.components[i]);\n                }\n            }\n        }\n    }\n\n    removeCaught = function() {\n        for(let i = 0; i < this.components.length; i++) {\n            if (this.components[i].caught) {\n                this.components.splice(i, 1);\n            }\n        }\n    }\n    \n    grabbableObject = function() {\n        let closestDebris = [];\n        for(let i = 0; i < this.debris.length; i++) {\n            if(this.debris[i].canBeGrabbed(this.astronaut)) {\n                closestDebris.push(this.debris[i]);\n            }\n        }\n        return closestDebris[0];\n    }\n\n\n    step = () => {\n        this.gameView.checkKeyState();\n        this.moveObjects();\n        this.removeCaught();\n        this.setCamera();\n        this.componentPickup();\n        if (this.gameOver === false) {\n            this.checkGameOver(); \n            this.checkCollisions();\n            this.checkAstronautCollision();\n            this.checkFlameCollision();\n            this.astronaut.throttleRotation();\n        }\n        // if (this.winner) {\n            // this.drawStars();\n        // }\n    }\n    \n    runGame = () => {\n        if (this.paused === false && this.gameOff === false) {\n            this.step();\n            this.draw();\n            if (this.gameOver) this.displayEndMessage();\n        }\n        window.requestAnimationFrame(this.runGame);\n    }\n\n    checkGameOver() {\n        if (this.astronaut.oxygen <= 0) {\n            this.gameLost();\n        } else if (this.astronaut.surface === this.escapePod && this.astronaut.inventory.length >= this.NUM_COMPONENTS) {\n            this.gameWon();\n        }\n    }\n\n    gameLost() {\n        this.gameOver = true;\n        this.deathSound.play();\n        this.astronaut.image = 'assets/imagery/dead_transparent.png';\n        this.astronaut.radius = 60;\n        this.astronaut.surface = null;\n        this.astronaut.vel = [1, 1];\n        this.astronaut.rotationSpeed = .03;\n    }\n\n    gameWon() {\n        this.winner = true;        \n        this.gameOver = true;\n        this.repairSound.play();\n        setTimeout(this.launchSequence, 6000);\n    }\n\n    launchSequence = () => {\n        this.launchSound.play();\n        // this.stars = this.makeStars();\n        // console.log(this.stars)\n        this.escapePod.image = 'assets/imagery/escape_pod_launched.gif'\n        this.escapePod.vel = [-15, -15];\n        this.escapePod.rotation = Math.PI * 2 * .85;\n        this.escapePod.rotationSpeed = 0;\n        this.astronaut.rotationSpeed = 0;\n        this.astronaut.caught = true;\n        this.astronaut.oxygen = 100;\n        this.astronaut.oxygenRate = 0;\n    }\n\n    displayEndMessage() {\n        if (this.gameOver) {\n            this.ctx.font = \"40px space_age\";\n            this.ctx.fillStyle = `${(this.winner) ? 'green' : 'red'}`;\n            this.ctx.fillText(`${(this.winner) ? 'You win!' : 'Game Over'}`, (this.CANVAS_WIDTH / 2) + 100, this.CANVAS_HEIGHT / 2 + 10);\n        }\n    }\n\n}\n\n","import Game from \"./game.js\"\nimport Sound from \"./sound.js\"\n\nexport default class GameView {\n    \n    constructor(ctx, difficulty) {\n        this.music = new Sound('assets/sounds/80s_theme.mp3');\n        this.lobbyMusic = new Sound('assets/sounds/september_song.mp3');\n        this.button = new Sound('assets/sounds/button.ogg');\n        this.ctx = ctx;\n        this.difficulty = difficulty;\n    }\n\n\n    loadsounds() {\n        this.instructions = new Sound('assets/sounds/instructions.wav');\n        this.chargingUp = new Sound('assets/sounds/charging_up.wav');\n        this.jumping = new Sound('assets/sounds/jumping.wav');\n        this.grunt = new Sound('assets/sounds/grunt.mp3');\n        this.startSound = new Sound('assets/sounds/door_open.wav');\n        this.jetpack = new Sound('assets/sounds/jetpack.wav')\n    }\n\n    startGame = () => {\n        this.loadsounds();\n        this.startSound.play();        \n        setTimeout(() => this.startup(), 2000);\n    }\n\n    restart = () => {\n        this.music.stop();\n        this.startSound.play();\n        this.game.gameOff = true;\n        setTimeout(() => {\n            this.toggleScreen('start-menu', true);\n            this.toggleScreen('game-canvas', false);\n            this.toggleScreen('minimap', false);\n            // this.game = new Game(this.ctx, this, this.difficulty);  \n            // this.astronaut = this.game.astronaut;\n            // this.music = new Sound('assets/sounds/80s_theme.mp3');\n            // this.lobbyMusic = new Sound('assets/sounds/september_song.mp3');\n        }, 1000)\n    }\n\n    startup = () => { \n        this.game = new Game(this.ctx, this, this.difficulty);  \n        this.astronaut = this.game.astronaut;\n        this.game.gameOff = false;\n        this.game.paused = false;\n        this.lobbyMusic.stop();\n        this.music.play()\n        this.music.loop();\n        this.toggleScreen('start-menu', false);\n        this.toggleScreen('game-canvas', true);\n        this.toggleScreen('minimap', true);\n        // setTimeout(this.instructions.play(), 2000)\n\n\n\n        // create a hash with all my keys and values of false\n        // on keydown, change keys value to true\n        // on keyup change it to false\n        // \n\n        this.keyState = { ' ': false, 'ArrowLeft': false, 'ArrowRight': false, 'ArrowUp': false, 'ArrowDown': false, }\n\n        \n        window.addEventListener('keydown', (e) => {\n            if (!this.game.gameOver) {\n                if (Object.keys(this.keyState).includes(e.key)) {\n                    this.keyState[e.key] = true;\n                }\n            }\n        });\n\n        window.addEventListener('keyup', (e) => {\n            if (Object.keys(this.keyState).includes(e.key)) {\n                this.keyState[e.key] = false;\n            }\n\n            if (!this.game.gameOver) {\n                if (e.key === ' ') {\n                    if (this.astronaut.surface) {\n                        this.astronaut.pushOff(this.astronaut.surface);\n                        this.chargingUp.stop();\n                        this.jumping.play();\n                    }\n                    this.astronaut.resetPower();\n                }\n            }   \n\n            if (e.code === 'ArrowLeft') {\n                    this.game.steamLeft = false;\n            }\n\n            if (e.code === 'ArrowRight') {\n                    this.game.steamRight = false;\n            }\n\n            if (e.code === 'ArrowUp') {\n                    this.game.steamUp = false;\n            }\n\n            if (e.code === 'ArrowDown') {\n                    this.game.steamDown = false;\n            }\n\n        });\n\n\n        document.getElementById('mute').addEventListener('click', this.music.muteToggle)\n        document.getElementById('pause').addEventListener('click', this.togglePause)\n        document.getElementById('restart').addEventListener('click', this.restart)\n        document.getElementById('start-menu').addEventListener('click', this.lobbySound);\n\n        window.requestAnimationFrame(this.game.runGame);\n    }\n\n    lobbySound = function() {\n        if (this.game.gameOff) this.lobbyMusic.play();\n    }\n    \n    toggleScreen(id, toggle) {\n        let element = document.getElementById(id);\n        let display = (toggle) ? 'block' : 'none';\n        element.style.display = display;\n    }\n\n    togglePause = () => {\n        if (this.game.paused === true) {\n            this.game.paused = false;\n        } else {\n            this.game.paused = true;\n        }\n    }\n\n    checkKeyState = () => {\n        Object.keys(this.keyState).forEach((el) => {\n            if (this.keyState[el] && !this.game.gameOver) this.runKeyAction(el);\n        });\n    }\n\n    runKeyAction = (key) => {\n        switch (key) {\n            case ' ':\n                if (this.astronaut.surface) {\n                    this.astronaut.resetPower();\n                    this.astronaut.increasePower();\n                } else {\n                    if(this.game.grabbableObject !== []) {\n                        this.astronaut.stick(this.game.grabbableObject());\n                        this.grunt.play();\n                    }\n                }\n                break;            \n            case 'ArrowLeft':\n                if (!this.astronaut.surface && this.astronaut.jetpack) {\n                    this.astronaut.vel[0] -= .08\n                    this.jetpack.play();\n                    this.astronaut.oxygen -= .1;\n                    this.game.steamLeft = true;\n                }\n                break;\n            case 'ArrowRight':\n                if (!this.astronaut.surface && this.astronaut.jetpack) {\n                    this.astronaut.vel[0] += .08\n                    this.jetpack.play();\n                    this.astronaut.oxygen -= .1;\n                    this.game.steamRight = true;\n                }\n                break;\n            case 'ArrowUp':\n                if (!this.astronaut.surface && this.astronaut.jetpack) {\n                    this.astronaut.vel[1] -= .08\n                    this.jetpack.play();\n                    this.astronaut.oxygen -= .1;\n                    this.game.steamUp = true;\n                }\n                break;\n            case 'ArrowDown':\n                if (!this.astronaut.surface && this.astronaut.jetpack) {\n                    this.astronaut.vel[1] += .08\n                    this.jetpack.play();\n                    this.astronaut.oxygen -= .1;\n                    this.game.steamDown = true;\n                }\n                break;\n        }\n    }\n\n}\n\n","import MovingObject from './moving_object.js';\nimport Astronaut from './astronaut.js';\nimport Game from './game.js';\nimport GameView from './game_view.js';\nimport Debris from \"./debris.js\";\nimport Sound from \"./sound.js\";\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    const button = new Sound('assets/sounds/button.ogg');\n    const selected = new Sound('assets/sounds/selected.wav');\n    const lobbyMusic = new Sound('assets/sounds/september_song.mp3');\n    const canvas = document.getElementById('game-canvas');\n    canvas.height = window.innerHeight;\n    canvas.width = window.innerWidth;\n    const ctx = canvas.getContext('2d');\n    let difficulty = 'easy';\n    \n    \n    \n    \n    const startGame = function() {\n        const gameView = new GameView(ctx, difficulty);\n        document.body.requestFullscreen();\n        gameView.startGame();\n    }\n\n    const clickSound = function() {\n        button.play();\n    }\n\n    const changeDifficulty = function(e) {\n        // let buttonDifficulty = e.target.control.value;\n        console.log(e.target.control.value)\n        e.target.control.checked = true;\n        difficulty = e.target.control.value;\n        selected.play();\n\n    }\n\n\n    \n    \n    const easySelect = document.getElementById('easy-button');\n    easySelect.addEventListener('click', changeDifficulty);\n\n    const mediumSelect = document.getElementById('medium-button');\n    mediumSelect.addEventListener('click', changeDifficulty);\n\n    const hardSelect = document.getElementById('hard-button');\n    hardSelect.addEventListener('click', changeDifficulty);\n\n    const startButton = document.getElementById('start-button');\n    startButton.addEventListener('mouseover', clickSound);\n    startButton.addEventListener('click', startGame);\n\n\n    \n    \n\n\n\n    \n\n\n\n    \n\n\n\n})"],"names":["Sound","constructor","src","this","sound","document","createElement","setAttribute","style","display","body","appendChild","play","stop","pause","currentTime","restart","loop","addEventListener","e","muteToggle","muted","MovingObject","argumentHash","ctx","img","Image","image","drawImage","pos","radius","game","cameraX","cameraY","drawX","drawY","MAP_WIDTH","MAP_HEIGHT","save","translate","rotate","rotation","restore","fillStyle","color","beginPath","arc","Math","PI","fill","throttleVelocity","vel","wrap","otherObject","sqrt","collideSound","maxVelocity","drawShrunk","i","randomVec","length","deg","random","scale","sin","cos","randomRotation","vec","m","stepRotation","rotationSpeed","bounce","resetVelocity","newVel","combinePositions","vector","opposingAngle","atan2","makeVector","degrees","toDegrees","rads","toRads","makeAngleFromVector","Debris","super","notOnMap","Astronaut","maxRotationSpeed","inventory","oxygen","dead","pushoffSpeed","oxygenRate","loseOxygen","jetpack","setInterval","paused","stick","surface","pushOff","putOnCircumference","grabVector","grabPosition","increasePower","resetPower","throttleRotation","Component","caught","Flame","Jetpack","Level","makeGrid","difficulty","grid","populateMap","SEPERATOR","j","addDebris","addFlame","Game","gameView","position","debris","push","components","NUM_COMPONENTS","randomPosition","flame","flames","x","y","floor","clearRect","CANVAS_WIDTH","CANVAS_HEIGHT","objects","spinDraw","displayOxygen","drawMinimap","steamMaker","direction","steamImageLeft","astronaut","console","log","steamImageRight","steamImageUp","steamImageDown","gameOver","move","isCollidedWith","astronautCollision","astronautComponentCollision","NaN","collectSound","splice","closestDebris","canBeGrabbed","checkKeyState","moveObjects","removeCaught","setCamera","componentPickup","checkGameOver","checkCollisions","checkAstronautCollision","checkFlameCollision","gameOff","step","draw","displayEndMessage","window","requestAnimationFrame","runGame","launchSound","escapePod","canvas","width","height","NUM_DEBRIS","setNumberComponents","NUM_FLAMES","level","setStartingDebris","setDestinationDebris","addComponents","addJetpack","allObjects","deathSound","repairSound","things","concat","randomObjectSelector","array","steamLeft","drawSteam","steamRight","steamUp","steamDown","font","fillText","toFixed","minimap","getElementById","getContext","gameLost","gameWon","winner","setTimeout","launchSequence","GameView","loadsounds","startSound","startup","music","toggleScreen","lobbyMusic","keyState","Object","keys","includes","key","chargingUp","jumping","code","togglePause","lobbySound","forEach","el","runKeyAction","grabbableObject","grunt","button","instructions","id","toggle","selected","innerHeight","innerWidth","changeDifficulty","target","control","value","checked","startButton","requestFullscreen","startGame"],"sourceRoot":""}