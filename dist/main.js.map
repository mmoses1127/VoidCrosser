{"version":3,"file":"main.js","mappings":"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","sources":["webpack://js_project/./src/moving_object.js","webpack://js_project/./src/debris.js","webpack://js_project/./src/astronaut.js","webpack://js_project/./src/sound.js","webpack://js_project/./src/component.js","webpack://js_project/./src/flame.js","webpack://js_project/./src/jetpack.js","webpack://js_project/./src/level.js","webpack://js_project/./src/game.js","webpack://js_project/./src/game_view.js","webpack://js_project/./src/index.js"],"sourcesContent":["import Sound from \"./sound\";\n\n\nexport default class MovingObject {\n    constructor(argumentHash) {\n        this.pos = argumentHash.pos;\n        this.vel = argumentHash.vel;\n        this.radius = argumentHash.radius;\n        this.color = argumentHash.color;\n        this.game = argumentHash.game;\n\n        this.maxVelocity = 6;\n    }\n\n    drawObject = function(ctx) {\n        let img = new Image();\n        img.src = this.image\n        ctx.drawImage(img, this.pos[0] - this.radius - this.game.cameraX, this.pos[1] - this.radius - this.game.cameraY, this.radius * 2, this.radius * 2)\n    }\n\n    spinDraw = function(ctx) {\n        let img = new Image();\n        img.src = this.image;\n\n        this.drawX = this.pos[0] - this.game.cameraX;\n        this.drawY = this.pos[1] - this.game.cameraY;\n\n        if ((this.drawX + this.radius * 2) > this.game.MAP_WIDTH) {\n            this.drawX = this.drawX - this.game.MAP_WIDTH;\n        } else if ((this.drawX + this.radius * 2) < 0) {\n            this.drawX = this.drawX + this.game.MAP_WIDTH;\n        } \n        if ((this.drawY + this.radius * 2) > this.game.MAP_HEIGHT) {\n            this.drawY = this.drawY - this.game.MAP_HEIGHT;\n        } else if ((this.drawY + this.radius * 2) < 0) {\n            this.drawY = this.drawY + this.game.MAP_HEIGHT;\n        }  \n\n        ctx.save();\n        ctx.translate((this.drawX), (this.drawY));\n        ctx.rotate(this.rotation);\n        ctx.translate(-(this.drawX), -(this.drawY));\n        ctx.drawImage(img, this.drawX - this.radius, this.drawY - this.radius, this.radius * 2, this.radius * 2)\n        ctx.restore();\n    }\n\n\n    drawPoint = function(ctx) {\n        ctx.fillStyle = this.color;\n        ctx.beginPath();\n        ctx.arc(\n                    this.pos[0] - this.game.cameraX,\n                    this.pos[1] - this.game.cameraY,\n                    1,\n                    0,\n                    2 * Math.PI,\n                    false\n            )\n        ctx.fill()\n    }\n\n    drawShrunk(ctx) {\n        ctx.fillStyle = this.color;\n        ctx.beginPath();\n        ctx.arc(\n                    this.pos[0] / this.game.MAP_WIDTH * 200,\n                    this.pos[1] / this.game.MAP_WIDTH * 200,\n                    3,\n                    0,\n                    2 * Math.PI,\n                    false\n                )\n        ctx.fill()\n    }\n\n    throttleVelocity() {\n        for (let i = 0; i < 2; i++) {\n            if (this.vel[i] > this.maxVelocity) {\n                this.vel[i] = this.maxVelocity;\n            } else if (this.vel[i] < -this.maxVelocity) {\n                this.vel[i] = -this.maxVelocity\n            }\n        }\n    }\n    \n    move = function(){\n        this.throttleVelocity();\n        this.pos[0] += this.vel[0]\n        this.pos[1] += this.vel[1]\n        this.pos = this.game.wrap(this.pos);        \n    }\n    \n    isCollidedWith = function(otherObject) {\n        let sumRadii = this.radius + otherObject.radius;   \n        let distance = Math.sqrt(((otherObject.pos[0] - this.pos[0]) ** 2) + ((otherObject.pos[1] - this.pos[1]) ** 2))\n\n        return (sumRadii * .9) >= distance;\n    }\n\n    canBeGrabbed = function(otherObject) {\n        let sumRadii = this.radius + otherObject.radius;   \n        let distance = Math.sqrt(((this.pos[0] - otherObject.pos[0]) ** 2) + ((this.pos[1] - otherObject.pos[1]) ** 2))\n\n        return sumRadii + 10 >= distance;\n    }\n\n    randomVec(length) {\n        const deg = 2 * Math.PI * Math.random();\n        return this.scale([Math.sin(deg), Math.cos(deg)], length);\n    }\n\n    randomRotation() {\n        return (Math.random() * 2) * Math.PI / 180\n    }\n\n    scale(vec, m) {\n        return [vec[0] * m, vec[1] * m];\n    }\n\n    stepRotation() {\n        this.rotation += this.rotationSpeed;\n    }\n\n    bounce() {\n        this.vel[0] = -this.vel[0];\n        this.vel[1] = -this.vel[1];\n        this.pos[0] += this.vel[0] * 5;\n        this.pos[1] += this.vel[1] * 5;\n    }\n\n    resetVelocity(newVel) {\n        this.vel[0] = newVel[0];\n        this.vel[1] = newVel[1];\n    }\n\n    combinePositions(vector) {\n        this.pos[0] += vector[0];\n        this.pos[1] += vector[1];\n    }\n\n    opposingAngle(otherObject) {\n        return Math.atan2((otherObject.pos[1] - this.pos[1]), (otherObject.pos[0] - this.pos[0])) + 2.2;\n    }\n\n    makeVector(length, degrees) {\n        return this.scale([Math.sin(degrees), Math.cos(degrees)], length);\n    }\n\n    toDegrees(rads) {\n        return rads * 180 / Math.PI;\n    }\n\n    toRads(degrees) {\n        return degrees * Math.PI / 180\n    }\n\n    makeAngleFromVector(vector) {\n        return Math.atan2(-vector[1], vector[0])\n    }\n}\n\n\n\n\n","import MovingObject from './moving_object.js';\n\n\nexport default class Debris extends MovingObject {\n    constructor(pos, game) {\n        super({\n            color: 'red', \n            radius: 70, \n            vel: [0,0],\n            pos: pos, \n            game: game\n        });\n        this.vel = this.randomVec(3);\n        this.rotationSpeed = .03;\n        this.rotation = 0;\n        this.image = 'assets/imagery/debris.png';\n        this.notOnMap = true;\n    }\n\n}\n","import MovingObject from './moving_object.js';\nimport Sound from './sound.js';\n\nexport default class Astronaut extends MovingObject {\n\n    constructor(game) {\n        super({\n            color: 'blue', \n            radius: 30, \n            vel: [0, 0],\n            pos: [600, 0],\n            game: game\n\n        });\n        this.rotation = 0;\n        this.maxRotationSpeed = 1;\n        this.inventory = [];\n        this.oxygen = 100.00;\n        this.dead = false;\n        this.image = 'assets/imagery/astronaut.png';\n        this.pushoffSpeed = 1;\n        this.oxygenRate = 1;\n        this.loseOxygen();\n        this.jetpack = true;\n    }\n\n    loseOxygen() {\n        setInterval( () => {\n            if (!this.game.paused) this.oxygen -= this.oxygenRate;\n        }, 2000)\n    }\n\n    stick(otherObject) {\n        if (otherObject) {\n            this.surface = otherObject;\n            this.rotation = this.opposingAngle(this.surface);\n            this.rotationSpeed = this.surface.rotationSpeed;     \n            this.vel = [...this.surface.vel];\n        }\n    }\n\n    pushOff(otherObject) {\n        let vector = this.makeVector(6, -this.rotation); \n        this.rotation = -this.rotation;\n        this.surface = null;\n        this.rotationSpeed = 0;\n        this.resetVelocity(vector);       \n    }\n\n\n    putOnCircumference(otherObject) {\n        let grabVector = this.makeVector(otherObject.radius, -this.rotation);\n        let grabPosition = [(otherObject.pos[0] + grabVector[0]), (otherObject.pos[1] + grabVector[1])];\n        this.pos = grabPosition\n    }\n\n    astronautCollision = function(otherObject) {\n        let sumRadii = this.radius + otherObject.radius;   \n        let distance = Math.sqrt(((otherObject.pos[0] - this.pos[0]) ** 2) + ((otherObject.pos[1] - this.pos[1]) ** 2))\n\n        return (sumRadii * .5) >= distance;\n    }\n\n    astronautComponentCollision = function(otherObject) {\n        let sumRadii = this.radius + otherObject.radius;   \n        let distance = Math.sqrt(((otherObject.pos[0] - this.pos[0]) ** 2) + ((otherObject.pos[1] - this.pos[1]) ** 2))\n\n        return sumRadii >= distance;\n    }\n\n    increasePower() {\n        setInterval(() => {\n            if (this.pushoffSpeed < 10) this.pushoffSpeed += 1;\n        }, 300) \n        \n    }\n\n    resetPower() {\n        this.pushoffSpeed = 1;\n    }\n\n\n\n    throttleRotation() {\n        if (this.rotationSpeed > this.maxRotationSpeed) {\n            this.rotationSpeed = this.maxRotationSpeed;\n        }\n\n        if (this.rotationSpeed < -this.maxRotationSpeed) {\n            this.rotationSpeed = -this.maxRotationSpeed;\n        }\n    }\n}\n\n","export default class Sound {\n    constructor(src) {\n        this.sound = document.createElement(\"audio\");\n        this.sound.src = src;\n        this.sound.setAttribute(\"preload\", \"auto\");\n        this.sound.setAttribute(\"controls\", \"none\");\n        this.sound.setAttribute(\"muted\", \"muted\")\n        this.sound.style.display = \"none\";\n        document.body.appendChild(this.sound);\n        this.play = function(){\n            this.sound.play();\n        }\n        this.stop = function(){\n            this.sound.pause();\n            this.sound.currentTime = 0;\n        }\n        this.restart = function(){\n            this.sound.currentTime = 0;\n            this.play();\n        }\n        this.loop = function(){\n            this.sound.addEventListener('ended', (e) => {\n                this.restart();\n            });\n        }\n        this.muteToggle = () => {\n            (this.sound.muted) ? this.sound.muted = false : this.sound.muted = true;\n        }\n\n    }\n}","import MovingObject from \"./moving_object.js\";\n\n\nexport default class Component extends MovingObject{\n    constructor(pos, game) {\n        super({\n            color: 'purple', \n            radius: 40, \n            vel: [0,0],\n            pos: pos, \n            game: game\n        });\n        this.image = 'assets/imagery/gear.png';\n        this.caught = false;\n        this.rotation = 1;\n        this.rotationSpeed = .03;\n    }\n}","import MovingObject from \"./moving_object.js\";\n\n\nexport default class Flame extends MovingObject {\n    constructor(pos, game) {\n        super({\n            color: 'orange', \n            radius: 60, \n            vel: [0,0],\n            pos: pos, \n            game: game\n        });\n        this.image = 'assets/imagery/flame_ball.gif';\n        this.rotation = 0;\n        this.rotationSpeed = this.toRads(Math.random() * Math.PI);\n        this.notOnMap = true;\n    }\n}","import MovingObject from \"./moving_object\";\n\n\nexport default class Jetpack extends MovingObject{\n    constructor(pos, game) {\n        super({\n            color: 'red', \n            radius: 40, \n            vel: [0,0],\n            pos: pos, \n            game: game\n        });\n        this.image = 'assets/imagery/jetpack.png';\n        this.caught = false;\n        this.rotation = 0;\n        this.rotationSpeed = .03;\n    }\n}","export default class Level {\n    constructor(game) {\n        this.game = game;\n        this.makeGrid();\n    }\n\n\n    makeGrid(difficulty) {\n        if (this.game.difficulty === 'easy') {\n            this.grid = [\n                [1, 0, 0, 0, 1, 0, 0, 1, 0, 0],\n                [0, 0, 0, 1, 0, 0, 0, 2, 0, 1],\n                [0, 0, 1, 0, 1, 0, 0, 1, 0, 0],\n                [1, 0, 0, 0, 0, 0, 1, 0, 2, 0],\n                [0, 1, 0, 2, 0, 2, 0, 0, 0, 1],\n                [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],\n                [0, 0, 0, 1, 0, 1, 0, 0, 2, 0],\n                [1, 0, 1, 0, 0, 0, 0, 1, 0, 1],\n                [0, 2, 0, 0, 0, 2, 0, 0, 0, 0],\n                [0, 0, 0, 2, 0, 0, 1, 0, 0, 1],\n            ]\n        } else if (this.game.difficulty === 'medium') {\n            this.grid = [\n                [1, 0, 2, 0, 0, 2, 0, 2, 0, 1],\n                [0, 0, 0, 2, 0, 0, 0, 0, 0, 0],\n                [1, 0, 0, 2, 0, 2, 0, 0, 1, 0],\n                [0, 2, 0, 2, 0, 0, 1, 0, 0, 0],\n                [0, 0, 0, 2, 0, 0, 1, 2, 0, 2],\n                [2, 0, 1, 2, 2, 0, 1, 0, 0, 0],\n                [0, 1, 0, 2, 0, 2, 1, 0, 0, 2],\n                [0, 0, 0, 2, 0, 0, 2, 0, 0, 0],\n                [0, 2, 0, 2, 0, 0, 0, 0, 1, 0],\n                [1, 0, 0, 2, 2, 0, 1, 0, 0, 1],\n            ]\n        } else if (this.game.difficulty === 'hard') {\n            this.grid = [\n                [1, 0, 2, 0, 0, 2, 0, 2, 0, 1],\n                [0, 1, 0, 2, 0, 0, 0, 0, 2, 0],\n                [1, 0, 0, 2, 0, 2, 0, 2, 0, 2],\n                [0, 2, 0, 2, 1, 0, 1, 0, 0, 0],\n                [0, 0, 0, 2, 0, 2, 1, 2, 0, 2],\n                [2, 0, 2, 2, 2, 0, 1, 0, 1, 0],\n                [0, 1, 0, 2, 0, 2, 1, 0, 0, 2],\n                [0, 0, 0, 2, 0, 0, 2, 0, 0, 0],\n                [0, 2, 0, 2, 2, 0, 0, 0, 1, 2],\n                [1, 0, 1, 2, 2, 0, 1, 0, 0, 1],\n            ]\n        }\n    }\n\n    populateMap() {\n        const SEPERATOR = this.game.MAP_WIDTH / 10\n        for (let i = 0; i < this.grid.length; i++) {\n            for (let j = 0; j < this.grid.length; j++) {\n                let pos = [SEPERATOR / 2 + j * SEPERATOR, SEPERATOR / 2 + i * SEPERATOR]\n\n                switch (this.grid[i][j]) {\n                    case 1:\n                        this.game.addDebris((pos))\n                        break;\n                \n                    case 2:\n                        this.game.addFlame((pos))\n                        break;\n                }\n            }\n            \n        }\n    }\n}","import Debris from \"./debris\";\nimport Astronaut from \"./astronaut\";\nimport Sound from \"./sound\";\nimport Component from \"./component\";\nimport Flame from \"./flame\";\nimport Star from \"./star\";\nimport Jetpack from \"./jetpack\";\nimport GameView from \"./game_view\";\nimport Level from \"./level\";\n\nexport default class Game {\n\n    constructor(ctx, gameView, difficulty) {\n        this.difficulty = difficulty;\n        this.gameView = gameView;\n        this.CANVAS_WIDTH = ctx.canvas.width;\n        this.CANVAS_HEIGHT = ctx.canvas.height;\n        this.ctx = ctx;\n        this.gameOver = false;\n        this.MAP_WIDTH = 2000;\n        this.MAP_HEIGHT = 2000;\n        this.setNumberComponents();\n        this.debris = []\n        this.flames = [];\n        this.level = new Level(this);\n        this.level.populateMap();\n        this.astronaut = new Astronaut(this);\n        this.setStartingDebris();\n        this.setDestinationDebris();\n        this.components = this.addComponents();\n        this.addJetpack();\n        this.objects = this.allObjects();\n        this.paused = false;\n        this.deathSound = new Sound('assets/sounds/death_rattle.wav');\n        this.collectSound = new Sound('assets/sounds/collect.wav');\n        this.repairSound = new Sound('assets/sounds/repair.wav');\n        this.launchSound = new Sound('assets/sounds/launch.wav');\n        this.steamImageLeft = 'assets/imagery/steam.png';\n        this.steamImageRight = 'assets/imagery/steam_right.png';\n        this.steamImageUp = 'assets/imagery/steam_up.png';\n        this.steamImageDown = 'assets/imagery/steam_down.png';\n    }\n\n    setCamera() {\n        if (!this.astronaut.surface) {\n        this.cameraX = -(this.CANVAS_WIDTH / 2 - this.astronaut.pos[0]);\n        this.cameraY = -(this.CANVAS_HEIGHT / 2 - this.astronaut.pos[1]);\n        } else {\n            this.cameraX = -(this.CANVAS_WIDTH / 2 - this.astronaut.surface.pos[0]);\n            this.cameraY = -(this.CANVAS_HEIGHT / 2 - this.astronaut.surface.pos[1]);\n        }\n    }\n\n    allObjects() {\n        let things = [];\n        things = things.concat(this.debris).concat(this.flames).concat(this.components).concat(this.astronaut);\n        return things;\n    }\n\n    addDebris = function(position){\n        let debris = new Debris(position, this);\n        this.debris.push(debris);\n    }\n\n    setNumberComponents() {\n        switch (this.difficulty) {\n            case 'easy':\n                this.NUM_COMPONENTS = 3;\n                break;\n            case 'medium':\n                this.NUM_COMPONENTS = 5;\n                break;\n            case 'hard':\n                this.NUM_COMPONENTS = 7;\n                break;\n        }\n    }\n\n    addComponents = function(){\n        let components = [];\n        for(let i = 0; i < this.NUM_COMPONENTS; i++){\n            components.push(new Component(this.randomPosition(), this));\n        }\n        return components;\n    }\n\n\n    addFlame = function(position){\n        let flame = new Flame(position, this);\n        this.flames.push(flame);\n    }\n\n    addJetpack() {\n        this.jetpack = new Jetpack(this.randomPosition(), this);\n        this.components.push(this.jetpack);\n    }\n\n    randomObjectSelector(array) {\n        return Math.floor(Math.random() * ((array.length)))\n    }\n\n    setStartingDebris() {\n        let i = this.randomObjectSelector(this.debris);\n        this.debris[i].vel = [0, 0];\n        this.debris[i].color = 'yellow';\n        this.debris[i].rotationSpeed = .02;\n        this.astronaut.stick(this.debris[i]);\n    }\n\n    setDestinationDebris() {\n        let i = this.randomObjectSelector(this.debris);\n        this.escapePod = this.debris[i];\n        this.escapePod.vel = [0, 0];\n        this.escapePod.color = 'yellowgreen'\n        this.escapePod.image = 'assets/imagery/escape_pod.gif';\n        this.escapePod.rotationSpeed = .01;\n        this.escapePod.notOnMap = false;\n    }\n    \n    randomPosition = function(){\n        let x;\n        let y;\n        x = Math.floor(Math.random() * this.MAP_WIDTH)\n        y = Math.floor(Math.random() * this.MAP_HEIGHT)\n        return [x,y];\n    }\n    \n    draw = function(){\n        this.ctx.clearRect(0,0,this.CANVAS_WIDTH, this.CANVAS_HEIGHT);\n        for (let i = 0; i < this.objects.length; i++) {\n            if (this.objects[i].caught !== true) {\n                this.objects[i].spinDraw(this.ctx);\n            }\n        }\n        this.displayOxygen();\n        this.drawMinimap()\n        this.steamMaker();\n    }\n    \n    steamMaker() {\n        if (this.steamLeft) {\n            this.drawSteam('left');\n        }\n        if (this.steamRight) {\n            this.drawSteam('right');\n        }\n        if (this.steamUp) {\n            this.drawSteam('up');\n        }\n        if (this.steamDown) {\n            this.drawSteam('down');\n        }\n    }\n\n\n    drawSteam = function(direction) {\n        let img = new Image();\n        switch (direction) {\n            case 'left':\n                img.src = this.steamImageLeft\n                this.ctx.drawImage(img,this.astronaut.pos[0] - this.cameraX + this.astronaut.radius, this.astronaut.pos[1] - this.cameraY - this.astronaut.radius / 2, this.astronaut.radius, this.astronaut.radius)\n                break;\n            case 'right':\n                img.src = this.steamImageRight\n                this.ctx.drawImage(img,this.astronaut.pos[0] - this.cameraX - this.astronaut.radius * 2, this.astronaut.pos[1] - this.cameraY - this.astronaut.radius / 2, this.astronaut.radius, this.astronaut.radius)\n                break;\n            case 'up':\n                img.src = this.steamImageUp\n                this.ctx.drawImage(img,this.astronaut.pos[0] - this.cameraX - this.astronaut.radius / 2, this.astronaut.pos[1] - this.cameraY + this.astronaut.radius, this.astronaut.radius, this.astronaut.radius)\n                break;\n            case 'down':\n                img.src = this.steamImageDown\n                this.ctx.drawImage(img,this.astronaut.pos[0] - this.cameraX - this.astronaut.radius / 2, this.astronaut.pos[1] - this.cameraY - this.astronaut.radius * 2, this.astronaut.radius, this.astronaut.radius)\n                break;\n        }\n\n    }\n    \n    displayOxygen() {\n\n        this.ctx.font = \"40px space_age\";\n        this.ctx.fillStyle = `${(this.astronaut.oxygen < 10) ? 'red' : 'green'}`;\n        this.ctx.fillText(`Oxygen: ${(this.astronaut.oxygen <= 0) ? '0' : this.astronaut.oxygen.toFixed()}%`, 50, 50);\n    }\n\n    drawMinimap() {\n        const canvas = document.getElementById('minimap');\n        const minimap = canvas.getContext('2d');\n        minimap.clearRect(0, 0, 200, 200)\n        for (let i = 0; i < this.objects.length; i++) {\n            if (!this.objects[i].notOnMap) this.objects[i].drawShrunk(minimap);\n        }\n    }\n\n    moveObjects = function() {\n        if (this.astronaut.surface) {\n            this.astronaut.putOnCircumference(this.astronaut.surface);\n        } else if (!this.gameOver) {\n            this.astronaut.rotation = -this.astronaut.makeAngleFromVector(this.astronaut.vel) + 2.1;\n        }    \n        for (let i = 0; i < this.objects.length; i++) {\n            this.objects[i].move();\n            this.objects[i].stepRotation();\n        }\n    }\n    \n    wrap = function(pos) {\n        for(let i = 0; i < pos.length; i++) {\n            if (pos[i] < 0) pos[i] += this.MAP_WIDTH;\n            if (pos[i] > this.MAP_WIDTH) pos[i] -= this.MAP_WIDTH;\n        }\n        return pos;\n    }\n    \n    checkCollisions = function() {\n        for(let i = 0; i < this.debris.length; i++) {\n            for(let j = i + 1; j < this.debris.length; j++) {\n                if (this.debris[i].isCollidedWith(this.debris[j])) {\n                    this.debris[i].bounce();\n                    this.debris[j].bounce();                        \n                }\n            }\n        }\n    }\n\n    checkAstronautCollision = function() {\n        if (!this.astronaut.surface) {\n            for (let i = 0; i < this.debris.length; i++) {\n                if (this.astronaut.astronautCollision(this.debris[i])) {\n                    this.debris[i].bounce();\n                    this.astronaut.bounce();\n                }\n            }\n        }\n    }\n\n    checkFlameCollision = function() {\n        for (let i = 0; i < this.flames.length; i++) {\n            if (this.astronaut.astronautCollision(this.flames[i])) {\n                this.astronaut.oxygen = 0;\n            }\n        }\n    }\n\n    componentPickup = function() {\n        for (let i = 0; i < this.components.length; i++) {\n            if (this.astronaut.astronautComponentCollision(this.components[i])) {\n                this.components[i].caught = true;\n                this.components[i].pos = [NaN, NaN];\n                this.collectSound.play();\n                if (this.components[i] instanceof Jetpack) {\n                    this.astronaut.jetpack = true;\n                } else {\n                    this.astronaut.inventory.push(this.components[i]);\n                }\n            }\n        }\n    }\n\n    removeCaught = function() {\n        for(let i = 0; i < this.components.length; i++) {\n            if (this.components[i].caught) {\n                this.components.splice(i, 1);\n            }\n        }\n    }\n    \n    grabbableObject = function() {\n        let closestDebris = [];\n        for(let i = 0; i < this.debris.length; i++) {\n            if(this.debris[i].canBeGrabbed(this.astronaut)) {\n                closestDebris.push(this.debris[i]);\n            }\n        }\n        return closestDebris[0];\n    }\n\n\n    step = () => {\n        this.gameView.checkKeyState();\n        this.moveObjects();\n        this.removeCaught();\n        this.setCamera();\n        this.componentPickup();\n        if (this.gameOver === false) {\n            this.checkGameOver(); \n            this.checkCollisions();\n            this.checkAstronautCollision();\n            this.checkFlameCollision();\n            this.astronaut.throttleRotation();\n        }\n    }\n    \n    runGame = () => {\n        if (this.paused === false && this.gameOff === false) {\n            this.step();\n            this.draw();\n            if (this.gameOver) this.displayEndMessage();\n        }\n        window.requestAnimationFrame(this.runGame);\n    }\n\n    checkGameOver() {\n        if (this.astronaut.oxygen <= 0) {\n            this.gameLost();\n        } else if (this.astronaut.surface === this.escapePod && this.astronaut.inventory.length >= this.NUM_COMPONENTS) {\n            this.gameWon();\n        }\n    }\n\n    gameLost() {\n        this.gameOver = true;\n        this.deathSound.play();\n        this.astronaut.image = 'assets/imagery/dead_transparent.png';\n        this.astronaut.radius = 60;\n        this.astronaut.surface = null;\n        this.astronaut.vel = [1, 1];\n        this.astronaut.rotationSpeed = .03;\n    }\n\n    gameWon() {\n        this.winner = true;        \n        this.gameOver = true;\n        this.repairSound.play();\n        setTimeout(this.launchSequence, 6000);\n    }\n\n    launchSequence = () => {\n        this.launchSound.play();\n        this.escapePod.image = 'assets/imagery/escape_pod_launched.gif'\n        this.escapePod.vel = [-15, -15];\n        this.escapePod.rotation = Math.PI * 2 * .85;\n        this.escapePod.rotationSpeed = 0;\n        this.astronaut.rotationSpeed = 0;\n        this.astronaut.caught = true;\n        this.astronaut.oxygen = 100;\n        this.astronaut.oxygenRate = 0;\n    }\n\n    displayEndMessage() {\n        if (this.gameOver) {\n            this.ctx.font = \"40px space_age\";\n            this.ctx.fillStyle = `${(this.winner) ? 'green' : 'red'}`;\n            this.ctx.fillText(`${(this.winner) ? 'You win!' : 'Game Over'}`, (this.CANVAS_WIDTH / 2) + 100, this.CANVAS_HEIGHT / 2 + 10);\n        }\n    }\n\n}\n\n","import Game from \"./game.js\"\nimport Sound from \"./sound.js\"\n\nexport default class GameView {\n    \n    constructor(ctx, difficulty) {\n        this.music = new Sound('assets/sounds/80s_theme.mp3');\n        this.lobbyMusic = new Sound('assets/sounds/september_song.mp3');\n        this.button = new Sound('assets/sounds/button.ogg');\n        this.ctx = ctx;\n        this.difficulty = difficulty;\n    }\n\n\n    loadsounds() {\n        this.instructions = new Sound('assets/sounds/instructions.wav');\n        this.chargingUp = new Sound('assets/sounds/charging_up.wav');\n        this.jumping = new Sound('assets/sounds/jumping.wav');\n        this.grunt = new Sound('assets/sounds/grunt.mp3');\n        this.startSound = new Sound('assets/sounds/door_open.wav');\n        this.jetpack = new Sound('assets/sounds/jetpack.wav')\n    }\n\n    startGame = () => {\n        this.loadsounds();\n        this.startSound.play();        \n        setTimeout(() => this.startup(), 2000);\n    }\n\n    restart = () => {\n        this.music.stop();\n        this.startSound.play();\n        this.game.gameOff = true;\n        setTimeout(() => {\n            this.toggleScreen('start-menu', true);\n            this.toggleScreen('game-canvas', false);\n            this.toggleScreen('minimap', false);\n        }, 1000)\n    }\n\n    startup = () => { \n        this.game = new Game(this.ctx, this, this.difficulty);  \n        this.astronaut = this.game.astronaut;\n        this.game.gameOff = false;\n        this.game.paused = false;\n        this.lobbyMusic.stop();\n        this.music.play()\n        this.music.loop();\n        this.toggleScreen('start-menu', false);\n        this.toggleScreen('game-canvas', true);\n        this.toggleScreen('minimap', true);\n        this.keyState = { ' ': false, 'ArrowLeft': false, 'ArrowRight': false, 'ArrowUp': false, 'ArrowDown': false, }\n\n        \n        window.addEventListener('keydown', (e) => {\n            if (!this.game.gameOver) {\n                if (Object.keys(this.keyState).includes(e.key)) {\n                    this.keyState[e.key] = true;\n                }\n            }\n        });\n\n        window.addEventListener('keyup', (e) => {\n            if (Object.keys(this.keyState).includes(e.key)) {\n                this.keyState[e.key] = false;\n            }\n\n            if (!this.game.gameOver) {\n                if (e.key === ' ') {\n                    if (this.astronaut.surface) {\n                        this.astronaut.pushOff(this.astronaut.surface);\n                        this.chargingUp.stop();\n                        this.jumping.play();\n                    }\n                    this.astronaut.resetPower();\n                }\n            }   \n\n            if (e.code === 'ArrowLeft') {\n                    this.game.steamLeft = false;\n            }\n\n            if (e.code === 'ArrowRight') {\n                    this.game.steamRight = false;\n            }\n\n            if (e.code === 'ArrowUp') {\n                    this.game.steamUp = false;\n            }\n\n            if (e.code === 'ArrowDown') {\n                    this.game.steamDown = false;\n            }\n\n        });\n\n\n        document.getElementById('mute').addEventListener('click', this.music.muteToggle)\n        document.getElementById('pause').addEventListener('click', this.togglePause)\n        document.getElementById('restart').addEventListener('click', this.restart)\n        document.getElementById('start-menu').addEventListener('click', this.lobbySound);\n\n        window.requestAnimationFrame(this.game.runGame);\n    }\n\n    lobbySound = function() {\n        if (this.game.gameOff) this.lobbyMusic.play();\n    }\n    \n    toggleScreen(id, toggle) {\n        let element = document.getElementById(id);\n        let display = (toggle) ? 'flex' : 'none';\n        element.style.display = display;\n    }\n\n    togglePause = () => {\n        if (this.game.paused === true) {\n            this.game.paused = false;\n        } else {\n            this.game.paused = true;\n        }\n    }\n\n    checkKeyState = () => {\n        Object.keys(this.keyState).forEach((el) => {\n            if (this.keyState[el] && !this.game.gameOver) this.runKeyAction(el);\n        });\n    }\n\n    runKeyAction = (key) => {\n        switch (key) {\n            case ' ':\n                if (this.astronaut.surface) {\n                    this.astronaut.resetPower();\n                    this.astronaut.increasePower();\n                } else {\n                    if(this.game.grabbableObject !== []) {\n                        this.astronaut.stick(this.game.grabbableObject());\n                        this.grunt.play();\n                    }\n                }\n                break;            \n            case 'ArrowLeft':\n                if (!this.astronaut.surface && this.astronaut.jetpack) {\n                    this.astronaut.vel[0] -= .08\n                    this.jetpack.play();\n                    this.astronaut.oxygen -= .1;\n                    this.game.steamLeft = true;\n                }\n                break;\n            case 'ArrowRight':\n                if (!this.astronaut.surface && this.astronaut.jetpack) {\n                    this.astronaut.vel[0] += .08\n                    this.jetpack.play();\n                    this.astronaut.oxygen -= .1;\n                    this.game.steamRight = true;\n                }\n                break;\n            case 'ArrowUp':\n                if (!this.astronaut.surface && this.astronaut.jetpack) {\n                    this.astronaut.vel[1] -= .08\n                    this.jetpack.play();\n                    this.astronaut.oxygen -= .1;\n                    this.game.steamUp = true;\n                }\n                break;\n            case 'ArrowDown':\n                if (!this.astronaut.surface && this.astronaut.jetpack) {\n                    this.astronaut.vel[1] += .08\n                    this.jetpack.play();\n                    this.astronaut.oxygen -= .1;\n                    this.game.steamDown = true;\n                }\n                break;\n        }\n    }\n}\n\n","import MovingObject from './moving_object.js';\nimport Astronaut from './astronaut.js';\nimport Game from './game.js';\nimport GameView from './game_view.js';\nimport Debris from \"./debris.js\";\nimport Sound from \"./sound.js\";\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    const button = new Sound('assets/sounds/button.ogg');\n    const selected = new Sound('assets/sounds/selected.wav');\n    const lobbyMusic = new Sound('assets/sounds/september_song.mp3');\n    const canvas = document.getElementById('game-canvas');\n    canvas.height = window.innerHeight;\n    canvas.width = window.innerWidth;\n    const ctx = canvas.getContext('2d');\n    let difficulty = 'easy';\n    const tutorialBox = document.getElementById('tutorial');\n    let tutorialBackgrounds = [\n        'assets/imagery/meteor.jpeg',\n        'assets/imagery/space_junk_2.jpg',\n        'assets/imagery/game_screenshot_escape_pod.png',\n        'assets/imagery/game_screenshot_component.png',\n        'assets/imagery/game_screenshot_escape_pod.png',\n        'assets/imagery/game_screenshot_oxygen.png',\n        'assets/imagery/game_screenshot_hold.png',\n        'assets/imagery/game_screenshot_fireball.png',\n        'assets/imagery/game_screenshot_jet.png',\n        'assets/imagery/game_screenshot_steam.png',\n        'assets/imagery/game_screenshot_radar.png',\n        'assets/imagery/floating.jpg'\n\n\n\n\n    ];\n    const tutorialText = document.getElementById('tutorial-text');\n    let tutorialSentences = [\n        'The burning space junk headed straight for our station. It laid waste to the installation. Luckily I was able to grab on to the storage pod.',\n\n        'Theaftermath of the explosion is a field of wreckage.',\n\n        'Luckily my HUD is showing me that the escape pod is still intact, although damaged. If I can get to it after finding the right components to repair it, maybe I can fly back to Earth.',\n\n        'The components seem to be scattered throughout the debris field. I need to collect them.',\n\n        'Once I collect all the components, I will head straight to the escape pod and get the hell out of here.',\n\n        'Damn, my suit is ripped from the explosion. I need to hurry up before I run out of oxygen.',\n\n        'I can navigate by grabbing and holding onto the spinning debris pieces by holding <span>SPACEBAR</span>. If I <span>release SPACEBAR</span>, I can push off away from the debris towards my next target.',\n\n        'I need to avoid the fiery balls of wreckage as I move through the debris.',\n        'Ah, my EVA jetpack is out there, too! I should collect that right away...',\n\n        '...because it will allow me to use the <span>ARROW KEYS</span> to adjust my flight trajectory. I should use it sparingly, though, becuase it consumes a lot of my oxygen.',\n\n        'On my radar, my position is shown in blue, the components in purple, the jetpack in red, and the escape pod in green.',\n\n        'Okay, mental review: Hold onto the debris with <span>SPACEBAR</span>, let go to fly off. Get the <span>jetpack</span> and fly around with the <span>ARROW KEYS</span>. Collect all <span>components</span>, then head to the escape pod. I can do this!'\n    ]\n    \n    \n    const toggleScreenLobby = function(id, toggle) {\n        let element = document.getElementById(id);\n        let display = (toggle) ? 'flex' : 'none';\n        element.style.display = display;\n    }\n    \n    const startGame = function() {\n        lobbyMusic.stop();\n        const gameView = new GameView(ctx, difficulty);\n        document.body.requestFullscreen();\n        gameView.startGame();\n    }\n\n    const clickSound = function() {\n        button.play();\n    }\n\n    const changeDifficulty = function(e) {\n        e.target.control.checked = true;\n        difficulty = e.target.control.value;\n        selected.play();\n\n    }\n\n    const launchTutorial = function() {\n        lobbyMusic.play();\n        toggleScreenLobby('start-menu', false)\n        toggleScreenLobby('tutorial', true)\n    }\n\n    const stepTutorial = function() {\n        clickSound();\n        if (tutorialSentences.length > 0) {\n            tutorialText.innerHTML = `${tutorialSentences.shift()}`\n            tutorialBox.style.backgroundImage = `url(${tutorialBackgrounds.shift()})`;\n        } else {\n            toggleScreenLobby('start-menu', true)\n            toggleScreenLobby('tutorial', false)\n        }\n    }\n \n    const easySelect = document.getElementById('easy-button');\n    easySelect.addEventListener('click', changeDifficulty);\n\n    const mediumSelect = document.getElementById('medium-button');\n    mediumSelect.addEventListener('click', changeDifficulty);\n\n    const hardSelect = document.getElementById('hard-button');\n    hardSelect.addEventListener('click', changeDifficulty);\n\n    const startButton = document.getElementById('start-button');\n    startButton.addEventListener('mouseover', clickSound);\n    startButton.addEventListener('click', startGame);\n\n    const tutorialButton = document.getElementById('tutorial-button');\n    tutorialButton.addEventListener('mouseover', clickSound);\n    tutorialButton.addEventListener('click', launchTutorial);\n\n    const tutorialNext = document.getElementById('tutorial-next');\n    tutorialNext.addEventListener('click', stepTutorial);\n    \n    window.addEventListener('click', () => {\n        lobbyMusic.play();\n    })\n\n})"],"names":["MovingObject","constructor","argumentHash","ctx","img","Image","src","this","image","drawImage","pos","radius","game","cameraX","cameraY","drawX","drawY","MAP_WIDTH","MAP_HEIGHT","save","translate","rotate","rotation","restore","fillStyle","color","beginPath","arc","Math","PI","fill","throttleVelocity","vel","wrap","otherObject","sqrt","maxVelocity","drawShrunk","i","randomVec","length","deg","random","scale","sin","cos","randomRotation","vec","m","stepRotation","rotationSpeed","bounce","resetVelocity","newVel","combinePositions","vector","opposingAngle","atan2","makeVector","degrees","toDegrees","rads","toRads","makeAngleFromVector","Debris","super","notOnMap","Astronaut","maxRotationSpeed","inventory","oxygen","dead","pushoffSpeed","oxygenRate","loseOxygen","jetpack","setInterval","paused","stick","surface","pushOff","putOnCircumference","grabVector","grabPosition","increasePower","resetPower","throttleRotation","Sound","sound","document","createElement","setAttribute","style","display","body","appendChild","play","stop","pause","currentTime","restart","loop","addEventListener","e","muteToggle","muted","Component","caught","Flame","Jetpack","Level","makeGrid","difficulty","grid","populateMap","SEPERATOR","j","addDebris","addFlame","Game","gameView","position","debris","push","components","NUM_COMPONENTS","randomPosition","flame","flames","x","y","floor","clearRect","CANVAS_WIDTH","CANVAS_HEIGHT","objects","spinDraw","displayOxygen","drawMinimap","steamMaker","direction","steamImageLeft","astronaut","steamImageRight","steamImageUp","steamImageDown","gameOver","move","isCollidedWith","astronautCollision","astronautComponentCollision","NaN","collectSound","splice","closestDebris","canBeGrabbed","checkKeyState","moveObjects","removeCaught","setCamera","componentPickup","checkGameOver","checkCollisions","checkAstronautCollision","checkFlameCollision","gameOff","step","draw","displayEndMessage","window","requestAnimationFrame","runGame","launchSound","escapePod","canvas","width","height","setNumberComponents","level","setStartingDebris","setDestinationDebris","addComponents","addJetpack","allObjects","deathSound","repairSound","things","concat","randomObjectSelector","array","steamLeft","drawSteam","steamRight","steamUp","steamDown","font","fillText","toFixed","minimap","getElementById","getContext","gameLost","gameWon","winner","setTimeout","launchSequence","GameView","loadsounds","startSound","startup","music","toggleScreen","lobbyMusic","keyState","Object","keys","includes","key","chargingUp","jumping","code","togglePause","lobbySound","forEach","el","runKeyAction","grabbableObject","grunt","button","instructions","id","toggle","selected","innerHeight","innerWidth","tutorialBox","tutorialBackgrounds","tutorialText","tutorialSentences","toggleScreenLobby","clickSound","changeDifficulty","target","control","checked","value","startButton","requestFullscreen","startGame","tutorialButton","innerHTML","shift","backgroundImage"],"sourceRoot":""}