{"version":3,"file":"main.js","mappings":"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","sources":["webpack://js_project/./src/sound.js","webpack://js_project/./src/moving_object.js","webpack://js_project/./src/debris.js","webpack://js_project/./src/satellite.js","webpack://js_project/./src/astronaut.js","webpack://js_project/./src/component.js","webpack://js_project/./src/flame.js","webpack://js_project/./src/game.js","webpack://js_project/./src/game_view.js","webpack://js_project/./src/index.js"],"sourcesContent":["export default class Sound {\n    constructor(src) {\n        this.sound = document.createElement(\"audio\");\n        this.sound.src = src;\n        this.sound.setAttribute(\"preload\", \"auto\");\n        this.sound.setAttribute(\"controls\", \"none\");\n        this.sound.setAttribute(\"muted\", \"muted\")\n        this.sound.style.display = \"none\";\n        document.body.appendChild(this.sound);\n        this.play = function(){\n            this.sound.play();\n        }\n        this.stop = function(){\n            this.sound.pause();\n            this.sound.currentTime = 0;\n        }\n        this.restart = function(){\n            this.sound.currentTime = 0;\n            this.play();\n        }\n        this.loop = function(){\n            this.sound.addEventListener('ended', (e) => {\n                this.restart();\n            });\n        }\n        this.muteToggle = () => {\n            (this.sound.muted) ? this.sound.muted = false : this.sound.muted = true;\n        }\n\n    }\n}","import Sound from \"./sound\";\n\n\nexport default class MovingObject {\n    constructor(argumentHash) {\n        this.pos = argumentHash.pos;\n        this.vel = argumentHash.vel;\n        this.radius = argumentHash.radius;\n        this.color = argumentHash.color;\n        this.game = argumentHash.game;\n        this.collideSound = new Sound('../assets/sounds/collision.wav');\n        this.maxVelocity = 6;\n    }\n\n    drawObject = function(ctx) {\n        let img = new Image();\n        img.src = this.image\n        ctx.drawImage(img, this.pos[0] - this.radius - this.game.cameraX, this.pos[1] - this.radius - this.game.cameraY, this.radius * 2, this.radius * 2)\n    }\n\n    spinDraw = function(ctx) {\n        let img = new Image();\n        img.src = this.image;\n\n        ctx.save();\n        // ctx.translate(this.pos[0], this.pos[1]);\n        ctx.translate((this.pos[0] - this.game.cameraX), (this.pos[1] - this.game.cameraY));\n        ctx.rotate(this.rotation);\n        ctx.translate(-(this.pos[0] - this.game.cameraX), -(this.pos[1] - this.game.cameraY));\n        ctx.drawImage(img, this.pos[0] - this.radius - this.game.cameraX, this.pos[1] - this.radius - this.game.cameraY, this.radius * 2, this.radius * 2)\n        ctx.restore();\n    }\n\n\n    drawPoint = function(ctx) {\n        ctx.fillStyle = this.color;\n        ctx.beginPath();\n        ctx.arc(\n                    this.pos[0] - this.game.cameraX,\n                    this.pos[1] - this.game.cameraY,\n                    1,\n                    0,\n                    2 * Math.PI,\n                    false\n            )\n        ctx.fill()\n    }\n\n    drawShrunk(ctx) {\n        ctx.fillStyle = this.color;\n        ctx.beginPath();\n        ctx.arc(\n                    this.pos[0] / 4000 * 200,\n                    this.pos[1] / 4000 * 200,\n                    3,\n                    0,\n                    2 * Math.PI,\n                    false\n                )\n        ctx.fill()\n    }\n\n    throttleVelocity() {\n        for (let i = 0; i < 2; i++) {\n            if (this.vel[i] > this.maxVelocity) {\n                this.vel[i] = this.maxVelocity;\n            } else if (this.vel[i] < -this.maxVelocity) {\n                this.vel[i] = -this.maxVelocity\n            }\n        }\n    }\n    \n    move = function(){\n        this.throttleVelocity();\n        this.pos[0] += this.vel[0]\n        this.pos[1] += this.vel[1]\n        this.pos = this.game.wrap(this.pos);        \n    }\n    \n    isCollidedWith = function(otherObject) {\n        let sumRadii = this.radius + otherObject.radius;   \n        let distance = Math.sqrt(((otherObject.pos[0] - this.pos[0]) ** 2) + ((otherObject.pos[1] - this.pos[1]) ** 2))\n\n        return (sumRadii * .9) >= distance;\n    }\n\n    canBeGrabbed = function(otherObject) {\n        let sumRadii = this.radius + otherObject.radius;   \n        let distance = Math.sqrt(((this.pos[0] - otherObject.pos[0]) ** 2) + ((this.pos[1] - otherObject.pos[1]) ** 2))\n\n        return sumRadii + 30 >= distance;\n    }\n\n    randomVec(length) {\n        const deg = 2 * Math.PI * Math.random();\n        return this.scale([Math.sin(deg), Math.cos(deg)], length);\n    }\n\n    randomRotation() {\n        return (Math.random() * 2) * Math.PI / 180\n    }\n\n    scale(vec, m) {\n        return [vec[0] * m, vec[1] * m];\n    }\n\n    stepRotation() {\n        // this.rotation = (this.rotation + this.initialRotation) % 6.283\n        this.rotation += this.rotationSpeed;\n    }\n\n    bounce() {\n        // this.collideSound.play();\n        this.vel[0] = -this.vel[0];\n        this.vel[1] = -this.vel[1];\n        // let bounceDirection = this.opposingAngle(otherObject);\n        // let bounceVector = this.makeVector(2, bounceDirection)\n        // // console.log(`bounceVec is ${bounceVector}`)\n        this.pos[0] += this.vel[0] * 5;\n        this.pos[1] += this.vel[1] * 5;\n        // this.combineVectors(bounceVector);\n    }\n\n    resetVelocity(newVel) {\n        this.vel[0] = newVel[0];\n        this.vel[1] = newVel[1];\n    }\n\n    combinePositions(vector) {\n        this.pos[0] += vector[0];\n        this.pos[1] += vector[1];\n    }\n\n    opposingAngle(otherObject) {\n        return Math.atan2(-(this.pos[1] + otherObject.pos[1]), -(this.pos[0] - otherObject.pos[0]));\n        // return Math.atan2(-1, -1);\n    }\n\n    makeVector(length, degrees) {\n        return this.scale([Math.sin(degrees), Math.cos(degrees)], length);\n    }\n\n    toDegrees(rads) {\n        return rads * 180 / Math.PI;\n    }\n\n    toRads(degrees) {\n        return degrees * Math.PI / 180\n    }\n}\n\n\n\n\n","import MovingObject from './moving_object.js';\n\n\nexport default class Debris extends MovingObject {\n    constructor(pos, game) {\n        super({\n            color: 'red', \n            radius: 100, \n            vel: [0,0],\n            pos: pos, \n            game: game\n        });\n        this.vel = this.randomVec(3);\n        // this.vel[1] = this.randomVec(3);\n        this.rotationSpeed = this.toRads(Math.random() * 2 * Math.PI) ;\n        // this.rotationSpeed = 0;\n        this.rotation = 0;\n        this.image = '../assets/imagery/large_debris_burning.png';\n    }\n\n}\n","import MovingObject from './moving_object.js';\n\nexport default class Satellite extends MovingObject {\n    constructor(game) {\n        super({\n            color: 'blue', \n            radius: 100, \n            vel: [0,0],\n            pos: [0,0], \n            game: game\n        });\n        this.pos = game.astronaut.pos\n        this.vel = this.randomVec(3);\n        this.rotationSpeed = 0;\n        this.rotation = 0;\n        this.image = '../assets/imagery/long_satellite.jpg';\n    }\n}","import MovingObject from './moving_object.js';\nimport Sound from './sound.js';\n\nexport default class Astronaut extends MovingObject {\n\n    constructor(game) {\n        super({\n            color: 'green', \n            radius: 40, \n            vel: [0, 0],\n            pos: [600, 0],\n            game: game\n\n        });\n        this.rotation = 0;\n        this.maxRotationSpeed = 1;\n        this.stick(this.game.debris[0]);\n        this.inventory = [];\n        this.oxygen = 100.00;\n        this.dead = false;\n        this.image = 'assets/imagery/astronaut.png';\n        this.pushoffSpeed = 1;\n        this.oxygenRate = 1;\n        this.loseOxygen();\n        this.chokingSound = new Sound('../assets/sounds/choking.wav')  \n    }\n\n    loseOxygen() {\n        setInterval( () => {\n            this.oxygen -= this.oxygenRate;\n        }, 2000)\n    }\n\n    stick(otherObject) {\n        this.surface = otherObject;\n        this.rotation = this.opposingAngle(this.surface);\n        // console.log(this.rotation);\n        this.rotationSpeed = this.surface.rotationSpeed;     \n        this.vel = [...this.surface.vel];\n    }\n\n    pushOff(otherObject) {\n        let vector = this.makeVector(6, -this.rotation); //change to charge up pushoff speed?\n        this.surface = null;\n        this.rotationSpeed = 0;\n        this.resetVelocity(vector);       \n    }\n\n\n    putOnCircumference(otherObject) {\n        let grabVector = this.makeVector(otherObject.radius, -this.rotation);\n        // console.log(vector);\n        let grabPosition = [(otherObject.pos[0] + grabVector[0]), (otherObject.pos[1] + grabVector[1])];\n        // console.log(position);\n        this.pos = grabPosition\n    }\n\n    // magnitude of vector if surface.radius\n    // direction of vector is the changing surface rotation .makevector\n    // astronauts speed should be changed by that\n    // rotateAroundSurface() {\n    //     if (this.attached) {\n    //         // console.log(`this.rotation.is ${this.rotation}`);\n    //         // console.log(`this.rotationspeed is ${this.rotationSpeed}`);\n    //         // let rotationStep = this.rotation - this.rotationSpeed;\n    //         // this.rotation = rotationStep;\n    //         // console.log(`incremented astro rotation is ${this.rotationSpeed}`);\n    //         this.putOnCircumference(this.surface);\n            // console.log(`grab Vector is ${this.grabVector}`)\n            // let magnitude = this.surface.radius;\n            // let vector = this.makeVector(magnitude, this.rotation);\n            // console.log(`grabrotatevector is ${vector}`)\n            // this.pos = [this.surface.pos[0] + vector[0], this.surface.pos[1] + vector[1]];\n    //     }\n    // }\n\n    astronautCollision = function(otherObject) {\n        let sumRadii = this.radius + otherObject.radius;   \n        let distance = Math.sqrt(((otherObject.pos[0] - this.pos[0]) ** 2) + ((otherObject.pos[1] - this.pos[1]) ** 2))\n\n        return (sumRadii * .5) >= distance;\n    }\n\n    increasePower() {\n        setInterval(() => {\n            if (this.pushoffSpeed < 10) this.pushoffSpeed += 1;\n        }, 300) \n        \n    }\n\n    resetPower() {\n        this.pushoffSpeed = 1;\n        // console.log(`reset pushoffspeed is ${this.pushoffSpeed}`)\n\n    }\n\n    choking() {\n        // if (this.oxygen < 50) {\n        //     this.chokingSound.play();\n        // }\n    }\n\n    throttleRotation() {\n        if (this.rotationSpeed > this.maxRotationSpeed) {\n            this.rotationSpeed = this.maxRotationSpeed;\n        }\n\n        if (this.rotationSpeed < -this.maxRotationSpeed) {\n            this.rotationSpeed = -this.maxRotationSpeed;\n        }\n    }\n}\n\n","import MovingObject from \"./moving_object.js\";\n\n\nexport default class Component extends MovingObject{\n    constructor(pos, game) {\n        super({\n            color: 'white', \n            radius: 50, \n            vel: [0,0],\n            pos: pos, \n            game: game\n        });\n        this.image = '../assets/imagery/gear.png';\n        this.caught = false;\n    }\n}","import MovingObject from \"./moving_object.js\";\n\n\nexport default class Flame extends MovingObject {\n    constructor(pos, game) {\n        super({\n            color: 'orange', \n            radius: 130, \n            vel: [0,0],\n            pos: pos, \n            game: game\n        });\n        this.image = '../assets/imagery/flame_ball.gif';\n    }\n}","import Debris from \"./debris\";\nimport Satellite from \"./satellite\";\nimport Astronaut from \"./astronaut\";\nimport Sound from \"./sound\";\nimport Component from \"./component\";\nimport Flame from \"./flame\";\n\nexport default class Game {\n\n    constructor(ctx) {\n        this.CANVAS_WIDTH = ctx.canvas.width;\n        this.CANVAS_HEIGHT = ctx.canvas.height;\n        this.ctx = ctx;\n        this.NUM_DEBRIS = 10;\n        this.NUM_SATELLITES = 0;\n        this.NUM_COMPONENTS = 1;\n        this.NUM_FLAMES = 20;\n        this.gameOver = false;\n        this.debris = this.addDebris();\n        this.setStartingDebris();\n        this.setDestinationDebris();\n        this.astronaut = new Astronaut(this);\n        this.satellites = this.addSatellites();\n        this.components = this.addComponents();\n        this.flames = this.addFlames();\n        console.log(`debris1 pos and radius is ${this.debris[0].pos} and ${this.debris[0].radius}`)\n        console.log(`components1 pos and radius is ${this.components[0].pos} and ${this.components[0].radius}`)\n        this.objects = this.allObjects();\n        this.MAP_WIDTH = 4000;\n        this.MAP_HEIGHT = 4000;\n        this.paused = false;\n        this.successSound = new Sound('../assets/sounds/success.wav');\n        this.deathSound = new Sound('../assets/sounds/death_rattle.wav');\n        this.collectSound = new Sound('../assets/sounds/collect.wav');\n        this.repairSound = new Sound('../assets/sounds/repair.wav');\n        this.launchSound = new Sound('../assets/sounds/launch.wav');\n        this.steamImage = '../assets/imagery/steam.jpg';\n    }\n\n    setCamera() {\n        if (!this.astronaut.surface) {\n        this.cameraX = -(this.CANVAS_WIDTH / 2 - this.astronaut.pos[0]);\n        this.cameraY = -(this.CANVAS_HEIGHT / 2 - this.astronaut.pos[1]);\n        } else {\n            this.cameraX = -(this.CANVAS_WIDTH / 2 - this.astronaut.surface.pos[0]);\n            this.cameraY = -(this.CANVAS_HEIGHT / 2 - this.astronaut.surface.pos[1]);\n        }\n    }\n\n    allObjects() {\n        let things = [];\n        things = things.concat(this.debris).concat(this.satellites).concat(this.components).concat(this.astronaut).concat(this.flames);\n        return things;\n    }\n\n    addDebris = function(){\n        let debris = [];\n        for(let i = 0; i < this.NUM_DEBRIS; i++){\n            debris.push(new Debris(this.randomPosition(), this));\n        }\n        return debris;\n    }\n\n    addSatellites = function(){\n        let satellites = [];\n        for(let i = 0; i < this.NUM_SATELLITES; i++){\n            // satellites.push(new satellites(this.randomPosition(), this));\n            satellites.push(new Satellite(this));\n        }\n        return satellites;\n    }\n\n    addComponents = function(){\n        let components = [];\n        for(let i = 0; i < this.NUM_COMPONENTS; i++){\n            components.push(new Component(this.randomPosition(), this));\n        }\n        return components;\n    }\n\n    addFlames = function(){\n        let flames = [];\n        for(let i = 0; i < this.NUM_FLAMES; i++){\n            flames.push(new Flame(this.randomPosition(), this));\n        }\n        return flames;\n    }\n\n    setStartingDebris() {\n        this.debris[0].pos = [2000, 2000];\n        this.debris[0].vel = [0, 0];\n        this.debris[0].color = 'yellow';\n        this.rotationSpeed = .1;\n    }\n\n    setDestinationDebris() {\n        this.debris[1].pos = [500, 500];\n        this.debris[1].vel = [0, 0];\n        this.debris[1].color = 'purple'\n        this.debris[1].image = '../assets/imagery/escape_pod.gif';\n        this.rotationSpeed = .1;\n    }\n    \n    randomPosition = function(){\n        let x;\n        let y;\n        x = Math.floor(Math.random() * 4000)\n        y = Math.floor(Math.random() * 4000)\n        return [x,y];\n    }\n    \n    draw = function(){\n        this.ctx.clearRect(0,0,this.CANVAS_WIDTH, this.CANVAS_HEIGHT);\n        for (let i = 0; i < this.objects.length; i++) {\n            if (this.objects[i].caught !== true) {\n                this.objects[i].spinDraw(this.ctx);\n                // this.objects[i].drawPoint(this.ctx)\n            }\n        }\n        this.displayOxygen();\n        this.drawMinimap()\n    }\n\n    drawSteam = function() {\n        let img = new Image();\n        img.src = this.steamImage\n        this.ctx.drawImage(img,this.astronaut.pos[0] + 100 - this.cameraX, this.astronaut.pos[1] - this.cameraY, this.radius * 2, this.radius * 2)\n        console.log('drew steam');\n    }\n    \n    displayOxygen() {\n        this.ctx.font = \"40px space_age\";\n        this.ctx.fillStyle = \"green\";\n        this.ctx.fillText(`Oxygen: ${(this.astronaut.oxygen <= 0) ? '0' : this.astronaut.oxygen.toFixed()}%`, 50, 50);\n        this.ctx.textAlign = \"left\";\n    }\n\n    drawMinimap() {\n        const canvas = document.getElementById('minimap');\n        const minimap = canvas.getContext('2d');\n        minimap.clearRect(0, 0, 200, 200)\n        for (let i = 0; i < this.objects.length; i++) {\n            this.objects[i].drawShrunk(minimap);\n        }\n    }\n\n\n    moveObjects = function() {\n        if (this.astronaut.surface) this.astronaut.putOnCircumference(this.astronaut.surface);\n        for (let i = 0; i < this.objects.length; i++) {\n            this.objects[i].move();\n            this.objects[i].stepRotation();\n        }\n    }\n    \n    wrap = function(pos) {\n        let dimensions = [this.MAP_WIDTH, this.MAP_HEIGHT]\n        for(let i = 0; i < pos.length; i++){\n            if(pos[i] < 0 || pos[i] > dimensions[i]){\n                pos[i] = dimensions[i] - pos[i];\n            }\n        }\n        return pos;\n    }\n    \n    checkCollisions = function() {\n        for(let i = 0; i < this.debris.length; i++) {\n            for(let j = i + 1; j < this.debris.length; j++) {\n                if (this.debris[i].isCollidedWith(this.debris[j])) {\n                    this.debris[i].bounce();\n                    this.debris[j].bounce();                        \n                }\n            }\n        }\n    }\n\n    checkAstronautCollision = function() {\n        if (!this.astronaut.surface) {\n            for (let i = 0; i < this.debris.length; i++) {\n                if (this.astronaut.astronautCollision(this.debris[i])) {\n                    console.log('astronaut hit!');\n                    this.debris[i].bounce();\n                    this.astronaut.bounce();\n                }\n            }\n        }\n    }\n\n    checkFlameCollision = function() {\n        for (let i = 0; i < this.flames.length; i++) {\n            if (this.astronaut.astronautCollision(this.flames[i])) {\n                console.log('astronaut hit!');\n                this.astronaut.oxygen = 0;\n            }\n        }\n    }\n\n    componentPickup = function() {\n        if (!this.astronaut.surface) {\n            for (let i = 0; i < this.components.length; i++) {\n                console.log(`checking these components: ${this.components}`);\n                if (this.astronaut.astronautCollision(this.components[i])) {\n                    // console.dir(`item collected is ${this.components.slice(i, 1)}`);\n                    this.astronaut.inventory.push(this.components[i]);\n                    // console.log(this.components)\n                    this.components[i].caught = true;\n                    this.components[i].pos = [NaN, NaN];\n                    this.collectSound.play();\n                }\n            }\n        }\n    }\n\n    removeCaught = function() {\n        for(let i = 0; i < this.components.length; i++) {\n            if (this.components[i].caught) {\n                console.log(`removed ${this.components[i]}`)\n                this.components.splice(i, 1);\n                console.log(this.astronaut.inventory)\n            }\n        }\n    }\n    \n    grabbableObject = function() {\n        let closestDebris = [];\n        for(let i = 0; i < this.debris.length; i++) {\n            if(this.debris[i].canBeGrabbed(this.astronaut)) {\n                closestDebris.push(this.debris[i]);\n            }\n        }\n        return closestDebris[0];\n    }\n\n\n    step = function() {\n        this.moveObjects();\n        this.checkCollisions();\n        this.removeCaught();\n        this.setCamera();\n        this.checkAstronautCollision();\n        this.checkFlameCollision();\n        this.componentPickup();\n        if (this.gameOver === false) this.checkGameOver(); \n        this.astronaut.throttleRotation();\n    }\n    \n    runGame = function() {\n        if (this.paused === false && this.gameOff === false) {\n            this.step();\n            this.draw();\n            if (this.gameOver) this.displayEndMessage();\n        }\n    }\n\n    checkGameOver() {\n        if (this.astronaut.oxygen <= 0) {\n            this.gameLost();\n        } else if (this.astronaut.surface === this.debris[1] && this.astronaut.inventory.length >= this.NUM_COMPONENTS) {\n            this.Winner = true;\n            this.gameWon();\n        }\n    }\n\n    gameLost() {\n        this.gameOver = true;\n        this.deathSound.play();\n        this.astronaut.image = '../assets/imagery/dead_transparent.png';\n        this.astronaut.radius = 100;\n        this.astronaut.surface = null;\n        this.astronaut.vel = [1, 1]\n    }\n\n    gameWon() {\n        this.gameOver = true;\n        this.repairSound.play();\n        setTimeout(this.launchSequence, 6000);\n        \n        \n    }\n\n    launchSequence = () => {\n        this.launchSound.play();\n        this.objects = [this.debris[1], this.astronaut];\n        this.debris[1].image = '../assets/imagery/escape_pod_launched.gif'\n        this.debris[1].vel = [-15, -15];\n        this.debris[1].rotation = Math.PI * 2 * .85;\n        this.debris[1].rotationSpeed = 0;\n        this.astronaut.rotationSpeed = 0;\n        this.astronaut.caught = true;\n        this.astronaut.oxygen = 100;\n        this.astronaut.oxygenRate = 0; \n    }\n\n    displayEndMessage() {\n        if (this.gameOver) {\n            this.ctx.font = \"40px space_age\";\n            this.ctx.fillStyle = \"green\";\n            this.ctx.fillText(`${(this.Winner) ? 'You win!' : 'Game Over'}`, (this.CANVAS_WIDTH / 2) + 100, this.CANVAS_HEIGHT / 2);\n            this.ctx.textAlign = 'center';\n            this.ctx.textBaseline = 'middle';\n        }\n    }\n\n}\n\n","import Game from \"./game.js\"\nimport Sound from \"./sound.js\"\n\nexport default class GameView {\n    \n    constructor(ctx) {\n        this.game = new Game(ctx);  \n        this.astronaut = this.game.astronaut;\n        this.music = new Sound('../assets/sounds/80s_theme.mp3');\n        this.lobbyMusic = new Sound('../assets/sounds/september_song.mp3');\n        this.button = new Sound('../assets/sounds/button.ogg');\n        this.ctx = ctx;\n    }\n\n\n    loadsounds() {\n        this.instructions = new Sound('../assets/sounds/instructions.wav');\n        this.chargingUp = new Sound('../assets/sounds/charging_up.wav');\n        this.jumping = new Sound('../assets/sounds/jumping.wav');\n        this.grunt = new Sound('../assets/sounds/grunt.mp3');\n        this.howTheHell = new Sound('../assets/sounds/how_the_hell.wav');\n        this.success = new Sound('../assets/sounds/success.wav');\n        this.start = new Sound('../assets/sounds/door_open.wav');\n        this.jetpack = new Sound('../assets/sounds/jetpack.wav')\n    }\n\n    startGame = () => {\n        this.loadsounds();\n        this.start.play();\n        // this.paused = true;\n        \n        setTimeout(() => this.startup(), 2000);\n    }\n\n    restart = () => {\n        this.music.stop();\n        this.start.play();\n        this.game.gameOff = true;\n        setTimeout(() => {\n            this.toggleScreen('start-menu', true);\n            this.toggleScreen('game-canvas', false);\n            this.toggleScreen('minimap', false);\n            this.game = new Game(this.ctx);  \n            this.astronaut = this.game.astronaut;\n            this.music = new Sound('../assets/sounds/80s_theme.mp3');\n            this.lobbyMusic = new Sound('../assets/sounds/september_song.mp3');\n            this.button = new Sound('../assets/sounds/button.ogg'); \n        }, 1000)\n    }\n\n    startup() { \n        this.game.gameOff = false;\n        this.game.paused = false;\n        this.lobbyMusic.stop();\n        this.music.play()\n        this.music.loop();\n        this.toggleScreen('start-menu', false);\n        this.toggleScreen('game-canvas', true);\n        this.toggleScreen('minimap', true);\n        // setTimeout(this.instructions.play(), 2000)\n\n\n        window.addEventListener('keydown', (e) => {\n            if (!this.game.gameOver) {\n                if (e.key === ' ') {\n                    if (this.astronaut.surface) {\n                        this.chargingUp.play();\n                        this.astronaut.resetPower();\n                        this.astronaut.increasePower();\n                    } else {\n                        if(this.game.grabbableObject !== []) {\n                            console.log('you grabbed')\n                            this.astronaut.stick(this.game.grabbableObject());\n                            this.grunt.play();\n                        }\n                    }\n                }\n    \n                if (e.code === 'ArrowLeft') {\n                    if (!this.astronaut.surface) {\n                        this.astronaut.vel[0] -= .4\n                        this.jetpack.play();\n                        this.astronaut.oxygen -= .1;\n                        this.astronaut.rotationSpeed -= .001\n                        this.game.drawSteam();\n                    }\n                }\n    \n                if (e.code === 'ArrowRight') {\n                    if (!this.astronaut.surface) {\n                        this.astronaut.vel[0] += .4\n                        this.jetpack.play();\n                        this.astronaut.oxygen -= .1;\n                        this.astronaut.rotationSpeed += .001\n                    }\n                }\n    \n                if (e.code === 'ArrowUp') {\n                    if (!this.astronaut.surface) {\n                        this.astronaut.vel[1] -= .4\n                        this.jetpack.play();\n                        this.astronaut.oxygen -= .1;\n                        this.astronaut.rotationSpeed += .001\n                    }\n                }\n    \n                if (e.code === 'ArrowDown') {\n                    if (!this.astronaut.surface) {\n                        this.astronaut.vel[1] += .4\n                        this.jetpack.play();\n                        this.astronaut.oxygen -= .1;\n                        this.astronaut.rotationSpeed -= .001\n                    }\n                }\n            }\n        });\n    \n            window.addEventListener('keyup', (e) => {\n                \n                if (!this.game.gameOver) {\n                    if (e.key === ' ') {\n                        if (this.astronaut.surface) {\n                            this.astronaut.pushOff(this.astronaut.surface);\n                            this.chargingUp.stop();\n                            this.jumping.play();\n                            // console.log(`pushed off with ${this.astronaut.pushoffSpeed} power`)\n                        }\n                        this.astronaut.resetPower();\n                    }\n                }   \n        });\n\n        document.getElementById('mute').addEventListener('click', this.music.muteToggle)\n        document.getElementById('pause').addEventListener('click', this.togglePause)\n        document.getElementById('restart').addEventListener('click', this.restart)\n        document.getElementById('start-menu').addEventListener('click', this.lobbySound);\n\n        \n        setInterval(()=>{\n            this.game.runGame();\n        }, 20);\n    }\n\n    lobbySound = function() {\n        if (this.game.gameOff) this.lobbyMusic.play();\n    }\n    \n    toggleScreen(id, toggle) {\n        let element = document.getElementById(id);\n        let display = (toggle) ? 'block' : 'none';\n        element.style.display = display;\n    }\n\n    togglePause = () => {\n        if (this.game.paused === true) {\n            this.game.paused = false;\n        } else {\n            this.game.paused = true;\n        }\n        console.log(this.paused);\n    }\n\n\n}\n\n","import MovingObject from './moving_object.js';\nimport Astronaut from './astronaut.js';\nimport Game from './game.js';\nimport GameView from './game_view.js';\nimport Debris from \"./debris.js\";\nimport Sound from \"./sound.js\";\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    \n    const canvas = document.getElementById('game-canvas');\n    canvas.height = window.innerHeight;\n    canvas.width = window.innerWidth;\n    const ctx = canvas.getContext('2d');\n    const gameView = new GameView(ctx);\n\n\n\n\n    const startGame = function() {\n        gameView.startGame();\n    }\n\n    const clickSound = function() {\n        gameView.button.play()\n    }\n\n\n    \n    const startButton = document.getElementById('start-button');\n    startButton.addEventListener('mouseover', clickSound);\n    startButton.addEventListener('click', startGame);\n\n    \n\n\n\n\n    \n\n\n\n    \n\n\n\n})"],"names":["Sound","constructor","src","this","sound","document","createElement","setAttribute","style","display","body","appendChild","play","stop","pause","currentTime","restart","loop","addEventListener","e","muteToggle","muted","MovingObject","argumentHash","ctx","img","Image","image","drawImage","pos","radius","game","cameraX","cameraY","save","translate","rotate","rotation","restore","fillStyle","color","beginPath","arc","Math","PI","fill","throttleVelocity","vel","wrap","otherObject","sqrt","collideSound","maxVelocity","drawShrunk","i","randomVec","length","deg","random","scale","sin","cos","randomRotation","vec","m","stepRotation","rotationSpeed","bounce","resetVelocity","newVel","combinePositions","vector","opposingAngle","atan2","makeVector","degrees","toDegrees","rads","toRads","Debris","super","Satellite","astronaut","Astronaut","maxRotationSpeed","stick","debris","inventory","oxygen","dead","pushoffSpeed","oxygenRate","loseOxygen","chokingSound","setInterval","surface","pushOff","putOnCircumference","grabVector","grabPosition","increasePower","resetPower","choking","throttleRotation","Component","caught","Flame","Game","NUM_DEBRIS","push","randomPosition","satellites","NUM_SATELLITES","components","NUM_COMPONENTS","flames","NUM_FLAMES","x","y","floor","clearRect","CANVAS_WIDTH","CANVAS_HEIGHT","objects","spinDraw","displayOxygen","drawMinimap","steamImage","console","log","move","dimensions","MAP_WIDTH","MAP_HEIGHT","j","isCollidedWith","astronautCollision","NaN","collectSound","splice","closestDebris","canBeGrabbed","moveObjects","checkCollisions","removeCaught","setCamera","checkAstronautCollision","checkFlameCollision","componentPickup","gameOver","checkGameOver","paused","gameOff","step","draw","displayEndMessage","launchSound","canvas","width","height","addDebris","setStartingDebris","setDestinationDebris","addSatellites","addComponents","addFlames","allObjects","successSound","deathSound","repairSound","things","concat","font","fillText","toFixed","textAlign","minimap","getElementById","getContext","gameLost","Winner","gameWon","setTimeout","launchSequence","textBaseline","GameView","loadsounds","start","startup","music","toggleScreen","lobbyMusic","button","instructions","chargingUp","jumping","grunt","howTheHell","success","jetpack","window","key","grabbableObject","code","drawSteam","togglePause","lobbySound","runGame","id","toggle","innerHeight","innerWidth","gameView","startButton","startGame"],"sourceRoot":""}